---

- name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled "
  block:
      - name: "1.1.1.1 | PATCH | Ensure mounting of cramfs filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install cramfs(\\s|$)"
            line: "install cramfs /bin/true"
            create: true
            mode: '0600'

      - name: "1.1.1.1 | PATCH | Remove cramfs module"
        modprobe:
            name: cramfs
            state: absent
  when:
      - rhel7cis_rule_1_1_1_1
      - ansible_connection != 'docker'
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.1.1.1
      - cramfs

- name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled"
  block:
      - name: "1.1.1.2 | PATCH | Ensure mounting of squashfs filesystems is disabled | Edit modprobe config "
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install squashfs(\\s|$)"
            line: "install squashfs /bin/true"
            create: true
            mode: '0600'

      - name: "1.1.1.2 | PATCH | Remove squashfs module | rmmod"
        modprobe:
            name: squashfs
            state: absent
  when:
      - rhel7cis_rule_1_1_1_2
      - ansible_connection != 'docker'
  tags:
      - level2-server
      - level2-workstation
      - patch
      - rule_1.1.1.2
      - squashfs

- name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled"
  block:
      - name: "1.1.1.3 | PATCH | Ensure mounting of udf filesystems is disabled | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install udf(\\s|$)"
            line: "install udf /bin/true"
            create: true
            mode: '0600'

      - name: "1.1.1.3 | PATCH | Remove udf module | rmmod "
        modprobe:
            name: udf
            state: absent
  when:
      - rhel7cis_rule_1_1_1_3
      - ansible_connection != 'docker'
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.1.1.3
      - udf

---

- name: "1.1.2 | AUDIT | Ensure /tmp is configured"
  block:
      - name: "1.1.2 | AUDIT | Ensure /tmp is configured | Absent"
        debug:
            msg: "WARNING!! {{ required_mount }} doesn't exist. This is a manual task"
        register: tmp_mount_absent
        changed_when: tmp_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names

      - name: "1.1.2 | AUDIT | Ensure /tmp is configured | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: tmp_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/tmp'
  when:
      - rhel7cis_rule_1_1_2
  tags:
      - level1-server
      - level1-workstation
      - audit
      - mounts
      - rule_1.1.2

- name: |
        "1.1.3 | PATCH | Ensure nodev option set on /tmp partition | skips if not present"
        "1.1.4 | PATCH | Ensure nosuid option set on /tmp partition | skips if not present"
        "1.1.5 | PATCH | Ensure noexec option set on /tmp partition| skips if not present"
  block:
      - name: |
              "1.1.3 | PATCH | Ensure nodev option set on /tmp partition | fstab config | skips if mount absent"
              "1.1.4 | PATCH | Ensure nosuid option set on /tmp partition | fstab_config | skips if mount absent"
              "1.1.5 | PATCH | Ensure noexec option set on /tmp partition| fstab_config | skips if mount absent"
        mount:
            name: /tmp
            src: "{{ item.device }}"
            fstype: "{{ item.fstype }}"
            state: present
            opts: defaults,{% if rhel7cis_rule_1_1_3 %}noexec,{% endif %}{% if rhel7cis_rule_1_1_4 %}nodev,{% endif %}{% if rhel7cis_rule_1_1_5 %}nosuid{% endif %}
        notify: remount tmp
        loop: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"
        when:
            - not rhel7cis_tmp_svc
            - item.mount == "/tmp"

      - name: |
              "1.1.3 | PATCH | Ensure noexec option set on /tmp partition | systemd | skips if mount absent"
              "1.1.4 | PATCH | Ensure nodev option set on /tmp partition | systemd | skips if mount absent"
              "1.1.5 | PATCH | Ensure nosuid option set on /tmp partition | systemd | skips if mount absent"
        template:
            src: etc/tmp_mount.j2
            dest: /etc/systemd/system/tmp.mount
            owner: root
            group: root
            mode: 0644
        notify: systemd restart tmp.mount
        when:
            - rhel7cis_tmp_svc
  when:
      - tmp_mount_present is defined
      - rhel7cis_rule_1_1_2  # This is required so the check takes place
      - rhel7cis_rule_1_1_3 or
        rhel7cis_rule_1_1_4 or
        rhel7cis_rule_1_1_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.1.3
      - rule_1.1.4
      - rule_1.1.5

- name: "1.1.6 | AUDIT | Ensure /dev/shm is configured"
  block:
      - name: "1.1.6 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "WARNING!! {{ required_mount }} doesn't exist. This is a manual task"
        register: dev_shm_mount_absent
        changed_when: dev_shm_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "1.1.6 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: dev_shm_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/dev/shm'
  when:
      - rhel7cis_rule_1_1_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - mounts
      - rule_1.1.6

- name: |
         "1.1.7 | PATCH | Ensure noexec option set on /dev/shm partition | skips if mount absent"
         "1.1.8 | PATCH | Ensure nosuid option set on /dev/shm partition | skips if mount absent"
         "1.1.9 | PATCH | Ensure noexec option set on /dev/shm partition | skips if mount absent"
  mount:
      name: /dev/shm
      src: tmpfs
      fstype: tmpfs
      state: present
      opts: defaults,{% if rhel7cis_rule_1_1_7 %}noexec,{% endif %}{% if rhel7cis_rule_1_1_8 %}nodev,{% endif %}{% if rhel7cis_rule_1_1_9 %}nosuid{% endif %},seclabel
  notify: remount dev_shm
  when:
      - rhel7cis_rule_1_1_7 or
        rhel7cis_rule_1_1_8 or
        rhel7cis_rule_1_1_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - mounts
      - rule_1.1.7
      - rule_1.1.8
      - rule_1.1.9

- name: "1.1.10 | AUDIT | Ensure separate partition exists for {{ required_mount }} | skips if mount absent"
  block:
      - name: "1.1.10 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "WARNING!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_mount_absent
        changed_when: var_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names

      - name: "1.1.10 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: var_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var'
  when:
      - rhel7cis_rule_1_1_10
  tags:
      - level2-server
      - level2-workstation
      - audit
      - mounts
      - rule_1.1.10

- name: "1.1.11 | AUDIT | Ensure separate partition exists for {{ required_mount }} | skips if mount absent"
  block:
      - name: "1.1.11 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "WARNING!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_tmp_mount_absent
        changed_when: var_tmp_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names

      - name: "1.1.11 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: var_tmp_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var/tmp'
  when:
      - rhel7cis_rule_1_1_11
  tags:
      - level2-server
      - level2-workstation
      - audit
      - mounts
      - rule_1.1.11

- name: |
          "1.1.12 | PATCH | Ensure noexec option set on /var/tmp partition | skips if mount absent"
          "1.1.13 | PATCH | Ensure nodec option set on /var/tmp partition | skips if mount absent"
          "1.1.14 | PATCH | Ensure nosuid option set on /var/tmp partition | skips if mount absent"
  mount:
      name: /var/tmp
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel7cis_rule_1_1_12 %}noexec,{% endif %}{% if rhel7cis_rule_1_1_13 %}nodev,{% endif %}{% if rhel7cis_rule_1_1_14 %}nosuid{% endif %}
  loop: "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.mount }}"
  when:
      - var_tmp_mount_present is defined
      - item.mount == "/var/tmp"
      - rhel7cis_rule_1_1_11  # This is required so the check takes place
      - rhel7cis_rule_1_1_12 or
        rhel7cis_rule_1_1_13 or
        rhel7cis_rule_1_1_14
  tags:
      - level1-server
      - level1-workstation
      - patch
      - mounts
      - skip_ansible_lint

- name: "1.1.15 | AUDIT | Ensure separate partition exists for /var/log  | skips if mount absent"
  block:
      - name: "1.1.15 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "WARNING!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_log_mount_absent
        changed_when: var_log_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names
      - name: "1.1.15 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var/log'
  when:
      - rhel7cis_rule_1_1_15
  tags:
      - level2-server
      - level2-workstation
      - audit
      - mounts
      - rule_1.1.15
      - skip_ansible_lint

- name: "1.1.16 | AUDIT | Ensure separate partition exists for /var/log/audit | skips if mount absent"
  block:
      - name: "1.1.16 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "WARNING!! {{ required_mount }} doesn't exist. This is a manual task"
        register: var_log_audit_mount_absent
        changed_when: var_log_audit_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names

      - name: "1.1.16 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/var/log/audit'
  when:
      - rhel7cis_rule_1_1_16
  tags:
      - level2-server
      - level2-workstation
      - audit
      - mounts
      - rule_1.1.16
      - skip_ansible_lint

- name: "1.1.17 | AUDIT | Ensure separate partition exists for /home"
  block:
      - name: "1.1.17 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Absent"
        debug:
            msg: "WARNING!! {{ required_mount }} doesn't exist. This is a manual task"
        register: home_mount_absent
        changed_when: home_mount_absent.skipped is undefined
        when:
            - required_mount not in mount_names

      - name: "1.1.17 | AUDIT | Ensure separate partition exists for {{ required_mount }} | Present"
        debug:
            msg: "Congratulations: {{ required_mount }} exists."
        register: home_mount_present
        when:
            - required_mount in mount_names
  vars:
      required_mount: '/home'
  when:
      - rhel7cis_rule_1_1_17
  tags:
      - level2-server
      - level2-workstation
      - audit
      - mounts
      - rule_1.1.17
      - skip_ansible_lint

- name: "1.1.18 | PATCH | Ensure nodev option set on /home partition | skips if mount absent"
  mount:
      name: /home
      src: "{{ item.device }}"
      fstype: "{{ item.fstype }}"
      state: present
      opts: defaults,{% if rhel7cis_rule_1_1_17 %}nodev{% endif %}
  loop: "{{ ansible_mounts }}"
  loop_control:
      label: "{{ item.mount }}"
  when:
      - home_mount_present is defined
      - item.mount == "/home"
      - rhel7cis_rule_1_1_18
  tags:
      - level1-server
      - level1-workstation
      - patch
      - mounts
      - rule_1.1.18
      - skip_ansible_lint

- name: |
      "1.1.19 | PATCH | Ensure removable media partitions include noexec option"
      "1.1.20 | PATCH | Ensure nodev option set on removable media partitions"
      "1.1.21 | PATCH | Ensure nosuid option set on removable media partitions"
  debug:
      msg: "--> Not relevant"
  changed_when: false
  when:
      - rhel7cis_rule_1_1_19 or
        rhel7cis_rule_1_1_20 or
        rhel7cis_rule_1_1_21
  tags:
      - level1-server
      - level1-workstation
      - audit
      - mounts
      - rule_1.1.19
      - rule_1.1.20
      - rule_1.1.21

- name: "1.1.22 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  args:
      warn: false
  changed_when: false
  failed_when: false
  when:
      - rhel7cis_rule_1_1_22
  tags:
      - skip_ansible_lint
      - level1-server
      - level1-workstation
      - patch
      - stickybits
      - permissons
      - rule_1.1.22

- name: "1.1.23 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: false
  when:
      - not rhel7cis_allow_autofs
      - "'autofs' in ansible_facts.packages"
      - rhel7cis_rule_1_1_23
  tags:
      - level1-server
      - level2-workstation
      - patch
      - mounts
      - automounting
      - rule_1.1.23

- name: "1.1.24 | PATCH | Disable USB Storage"
  block:
      - name: "1.1.24 | PATCH | Disable USB Storage | Edit modprobe config"
        lineinfile:
            dest: /etc/modprobe.d/CIS.conf
            regexp: "^(#)?install usb-storage(\\s|$)"
            line: "install usb-storage /bin/true"
            create: true
            owner: root
            group: root
            mode: 0600

      - name: "1.1.24 | PATCH | Disable USB Storage | Edit modprobe config"
        modprobe:
            name: usb-storage
            state: absent
  when:
      - rhel7cis_rule_1_1_24
  tags:
      - level1-server
      - level2-workstation
      - patch
      - mounts
      - removable_storage
      - rule_1.1.24

---

- name: "1.2.1 | PATCH | Ensure GPG keys are configured"
  block:
      - name: "1.2.1 | PATCH | Ensure GPG keys are configured"
        shell: "PKG=`rpm -qf {{ rpm_gpg_key }}` && rpm -q --queryformat \"%{PACKAGER} %{SIGPGP:pgpsig}\\n\" \"${PKG}\" | grep \"^{{ rpm_packager }}.*Key.ID.{{ rpm_key }}\""
        changed_when: false
  when:
      - rhel7cis_rule_1_2_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.2.1

- name: "1.2.2 | AUDIT | Ensure package manager repositories are configured"
  block:
      - name: "1.2.2 | AUDIT | Ensure package manager repositories are configured"
        shell: yum repolist
        changed_when: false
        register: repolist
        check_mode: false
        args:
            warn: false
        tags:
            - skip_ansible_lint

      - name: "1.2.2 | AUDIT | Ensure package manager repositories are configured"
        debug:
            msg:
                - "Please check against site policy repos listed below match expected:"
                - "{{ repolist.stdout_lines }}"
  when:
      - rhel7cis_rule_1_2_2
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_1.2.2
      - skip_ansible_lint

- name: "1.2.3 | PATCH | Ensure gpgcheck is globally activated"
  block:
      - name: "1.2.3 | AUDIT | Ensure gpgcheck is globally activated"
        find:
            paths: /etc/yum.repos.d
            patterns: "*.repo"
        changed_when: false
        register: yum_repos

      - name: "1.2.3 | PATCH | Ensure gpgcheck is globally activated"
        replace:
            path: "{{ item.path }}"
            regexp: "^gpgcheck=0"
            replace: "gpgcheck=1"
        loop: "{{ yum_repos.files }}"
        loop_control:
            label: "{{ item.path }}"
  when:
      - rhel7cis_rule_1_2_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.2.3

---

- name: "1.3.1 | PATCH | Ensure AIDE is installed"
  block:
      - name: "1.3.1 | PATCH | Ensure AIDE is installed | Install"
        package:
            name: aide
            state: installed

      - name: "1.3.1 | PATCH | Ensure AIDE is installed | started"
        shell: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
        args:
            creates: /var/lib/aide/aide.db.gz
        changed_when: false
        failed_when: false
        async: "{{ ansible_check_mode | ternary(0, 45) }}"
        poll: 0
  when:
      - rhel7cis_config_aide
      - rhel7cis_rule_1_3_1
  tags:
      - level1-server
      - level1-workstation
      - aide
      - patch
      - rule_1.3.1
  vars:
      ansible_python_interpreter: /bin/python

- name: "1.3.2 | PATCH | Ensure filesystem integrity is regularly checked | cron"
  cron:
      name: Run AIDE integrity check
      minute: "{{ rhel7cis_aide_cron['aide_minute'] | default('0') }}"
      hour: "{{ rhel7cis_aide_cron['aide_hour'] | default('5') }}"
      day: "{{ rhel7cis_aide_cron['aide_day'] | default('*') }}"
      month: "{{ rhel7cis_aide_cron['aide_month'] | default('*') }}"
      weekday: "{{ rhel7cis_aide_cron['aide_weekday'] | default('*') }}"
      job: "{{ rhel7cis_aide_cron['aide_job'] }}"
  when:
      - rhel7cis_rule_1_3_2
  tags:
      - level1-server
      - level1-workstation
      - aide
      - file_integrity
      - patch
      - rule_1.3.2

---

- name: "1.4.1 | PATCH | Ensure bootloader password is set"
  block:
      - name: "1.4.1 | PATCH | Ensure bootloader password is set"
        copy:
            dest: "{{ rhel7cis_bootloader_path }}user.cfg"  # noqa template-instead-of-copy
            content: "GRUB2_PASSWORD={{ rhel7cis_bootloader_password_hash }}"
            owner: root
            group: root
            mode: "{% if rhel7cis_legacy_boot %}0600{% else %}0700{% endif %}"
        register: bootloader_pw
        notify: grub2cfg

      - name: "1.4.1 | FACT | Ensure bootloader password is set"
        set_fact:
            change_requires_reboot: true
        when: bootloader_pw
  when:
      - ansible_distribution_version >= '7.2'
      - rhel7cis_set_boot_pass
      - rhel7cis_rule_1_4_1
  tags:
      - level1-server
      - level1-workstation
      - grub
      - patch
      - rule_1.4.1

- name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured"
  block:
      - name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured | Update grub config settings"
        file:
            path: "{{ rhel7cis_bootloader_path }}grub.cfg"
            owner: root
            group: root
            mode: 0600
        when:
            - rhel7cis_legacy_boot

      - name: "1.4.2 | PATCH | Ensure permissions on bootloader config are configured | UEFI"
        mount:
            name: /boot/efi
            src: "UUID={{ item.uuid }}"
            fstype: vfat
            state: present
            opts: defaults,umask=0027,fmask=0077,uid=0,gid=0
            passno: '0'
        loop: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"
        when:
            - not rhel7cis_legacy_boot
            - item.mount == "/boot/efi"
  when:
      - rhel7cis_rule_1_4_2
  tags:
      - level1-server
      - level1-workstation
      - grub
      - patch
      - rule_1.4.2

- name: "1.4.3 | PATCH | Ensure authentication required for single user mode"
  block:
      - name: "1.4.3 | PATCH | Ensure authentication required for single user mode | Emergency service"
        lineinfile:
            dest: /usr/lib/systemd/system/emergency.service
            regexp: '/sbin/sulogin'
            line: 'ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"'

      - name: "1.4.3 | PATCH | Ensure authentication required for single user mode | Rescue service"
        lineinfile:
            dest: /usr/lib/systemd/system/rescue.service
            regexp: '/sbin/sulogin'
            line: 'ExecStart=-/bin/sh -c "/sbin/sulogin; /usr/bin/systemctl --fail --no-block default"'
  when:
      - rhel7cis_rule_1_4_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.4.3

---

- name: "1.5.1 | PATCH | Ensure core dumps are restricted"
  block:
      - name: "1.5.1 | PATCH | Ensure core dumps are restricted | Update limits.conf file"
        lineinfile:
            state: present
            dest: /etc/security/limits.conf
            regexp: '^#?\\*.*core'
            line: '*                hard    core            0'
            insertbefore: '^# End of file'

      - name: "1.5.1 | PATCH | Ensure core dumps are restricted | Set active kernel parameter"
        sysctl:
            name: fs.suid_dumpable
            value: '0'
            state: present
            reload: true
            sysctl_set: true
            ignoreerrors: true

      - name: 1.5.1 | PATCH | Ensure core dumps are restricted | coredump.conf"
        lineinfile:
            dest: /etc/systemd/coredump.conf
            regexp: "{{ item.regex }}"
            line: "{{ item.line }}"
            create: true
            mode: 0644
        loop:
            - { regex: '^Storage', line: 'Storage=none' }
            - { regex: '^ProcessSizeMax', line: 'ProcessSizeMax=0' }
  when:
      - rhel7cis_rule_1_5_1
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_1.5.1

- name: "1.5.2 | PATCH | Ensure XD/NX support is enabled"
  shell: dmesg|grep -E "NX|XD" | grep " active"
  changed_when: false
  when:
      - rhel7cis_rule_1_5_2
  tags:
      - skip_ansible_lint
      - level1-server
      - level1-workstation
      - patch
      - rule_1.5.2

- name: "1.5.3 | PATCH | Ensure address space layout randomization (ASLR) is enabled"
  sysctl:
      name: kernel.randomize_va_space
      value: '2'
      state: present
      reload: true
      sysctl_set: true
      ignoreerrors: true
  when:
      - rhel7cis_rule_1_5_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.5.3

- name: "1.5.4 | PATCH | Ensure prelink is disabled"
  package:
      name: prelink
      state: absent
  when:
      - rhel7cis_rule_1_5_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.5.4
  vars:
      ansible_python_interpreter: /bin/python

---

- name: "1.6.1.1 | PATCH | Ensure SELinux is installed"
  package:
      name: libselinux
      state: present
  when:
      - not rhel7cis_selinux_disable
      - rhel7cis_rule_1_6_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.6.1.1
  vars:
      ansible_python_interpreter: /bin/python

- name: "1.6.1.2 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
  block:
      - name: "1.6.1.2 | PATCH | Ensure SELinux is not disabled in bootloader configuration"
        replace:
            dest: /etc/default/grub
            regexp: '(selinux|enforcing)\s*=\s*0\s*'
        register: selinux_grub_patch
        ignore_errors: true  # noqa ignore-errors
        notify: grub2cfg

      - name: "1.6.1.2 | FACT | Ensure SELinux is not disabled in bootloader configuration"
        set_fact:
            change_requires_reboot: true
        when:
            - selinux_grub_patch.changed
  when:
      - not rhel7cis_selinux_disable
      - rhel7cis_rule_1_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.6.1.2

- name: "1.6.1.3 | PATCH | Ensure SELinux policy is configured\n
         1.6.1.4 | PATCH | Ensure the SELinux state is enforcing or permissive"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: "{{ rhel7cis_selinux_state }}"
  when:
      - not rhel7cis_selinux_disable
      - rhel7cis_rule_1_6_1_3
      - rhel7cis_rule_1_6_1_4
  tags:
      - level1-server
      - level1-workstation
      - selinux
      - patch
      - rule_1.6.1.3
      - rule_1.6.1.4

- name: "1.6.1.5 | PATCH | Ensure the SELinux state is enforcing"
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  when:
      - not rhel7cis_selinux_disable
      - not rhel7cis_selinux_state == "permissive"
      - rhel7cis_rule_1_6_1_5
  tags:
      - level2-server
      - level2-workstation
      - selinux
      - patch
      - rule_1.6.1.5

- name: "1.6.1.6 | AUDIT | Ensure no unconfined daemons exist"
  block:
      - name: "1.6.1.6 | AUDIT | Ensure no unconfined daemons exist | Find the unconfined daemons"
        shell: ps -eZ | egrep "initrc" | egrep -vw "tr|ps|egrep|bash|awk" | tr ':' ' ' | awk '{ print $NF }'
        failed_when: false
        changed_when: false
        check_mode: false
        register: rhelcis_1_6_1_6_unconf_daemons

      - name: "1.6.1.6 | AUDIT | Ensure no unconfined daemons exist | Message on no unconfined daemones"
        debug:
            msg: "Good News! There are no unconfined daemons found on your system"
        when: rhelcis_1_6_1_6_unconf_daemons.stdout | length == 0

      - name: "1.6.1.6 | AUDIT | Ensure no unconfined daemons exist | Message on unconfined daemones"
        debug:
            msg: "WARNING!! You have unconfined daemons: {{ rhelcis_1_6_1_6_unconf_daemons.stdout_lines }}"
        when: rhelcis_1_6_1_6_unconf_daemons.stdout | length > 0
  when:
      - rhel7cis_rule_1_6_1_6
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_1.6.1.6

- name: "1.6.1.7 | PATCH | Ensure SETroubleshoot is not installed"
  package:
      name: setroubleshoot
      state: absent
  when:
      - rhel7cis_rule_1_6_1_7
  tags:
      - level1-server
      - level1-workstation
      - selinux
      - patch
      - rule_1.6.1.7
  vars:
      ansible_python_interpreter: /bin/python

- name: "1.6.1.8 | PATCH | Ensure the MCS Translation Service (mcstrans) is not installed"
  package:
      name: mcstrans
      state: absent
  when:
      - rhel7cis_rule_1_6_1_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.6.1.8
  vars:
      ansible_python_interpreter: /bin/python

---

- name: "1.7.1 | PATCH | Ensure message of the day is configured properly"
  template:
      src: etc/motd.j2
      dest: /etc/motd
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_1
  tags:
      - level1-server
      - level1-workstation
      - banner
      - patch
      - rule_1.7.1

- name: "1.7.2 | PATCH | Ensure local login warning banner is configured properly"
  template:
      src: etc/issue.j2
      dest: /etc/issue
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_2
  tags:
      - level1-server
      - level1-workstation
      - banner
      - patch
      - rule_1.7.2

- name: "1.7.3 | PATCH | Ensure remote login warning banner is configured properly"
  template:
      src: etc/issue.net.j2
      dest: /etc/issue.net
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_3
  tags:
      - level1-server
      - level1-workstation
      - banner
      - patch
      - rule_1.7.3

- name: "1.7.4 | PATCH | Ensure permissions on /etc/motd are configured"
  file:
      dest: /etc/motd
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_4
  tags:
      - level1-server
      - level1-workstation
      - perms
      - patch
      - rule_1.7.4

- name: "1.7.5 | PATCH | Ensure permissions on /etc/issue are configured"
  file:
      dest: /etc/issue
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_5
  tags:
      - level1-server
      - level1-workstation
      - perms
      - patch
      - rule_1.7.5

- name: "1.7.6 | PATCH | Ensure permissions on /etc/issue.net are configured"
  file:
      dest: /etc/issue.net
      state: file
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_1_7_6
  tags:
      - level1-server
      - level1-workstation
      - perms
      - patch
      - rule_1.7.6

---

- name: 1.8.1 | PATCH | Ensure GNOME Display Manager is removed
  block:
      - name: 1.8.1 | AUDIT | Ensure GNOME Display Manager is removed | check runlevel
        fail:
            msg: "System is at runlevel 5 and GDM is installed this can only be removed at Lvl <= 3"
        when:
            - ansible_env.SHLVL > 3

      - name: 1.8.1 | AUDIT | Ensure GNOME Display Manager is removed | Remove package
        package:
            name: gdm
            state: absent
  when:
      - "'gdm' in ansible_facts.packages"
      - not rhel7cis_gui
      - rhel7cis_rule_1_8_1
  tags:
      - rule_1.8.1
      - level1-server
      - level1-workstation

- name: 1.8.2 | PATCH | Ensure GDM login banner is configured
  block:
      - name: 1.8.2 | PATCH | Ensure GDM login banner is configured | gdm profile
        lineinfile:
            path: /etc/dconf/profile/gdm
            regexp: "^{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
            create: true
            mode: 0644
            owner: root
            group: root
        with_items:
            - {regexp: 'user-db', line: 'user-db:user' }
            - {regexp: 'system-db', line: 'system-db:gdm' }
            - {regexp: 'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }

      - name: 1.8.2 | PATCH | Ensure GDM login banner is configured | banner
        lineinfile:
            path: /etc/dconf/db/gdm.d/01-banner-message
            regexp: "^{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
            create: true
            mode: 0644
            owner: root
            group: root
        with_items:
            - { regexp: '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
            - { regexp: 'banner-message-enable', line: 'banner-message-enable=true' }
            - { regexp: 'banner-message-text', line: "banner-message-text='{{ rhel7cis_warning_banner }}' " }
  when:
      - "'gdm' in ansible_facts.packages"
      - not rhel7cis_gui
      - rhel7cis_rule_1_8_2
  tags:
      - rule_1.8.2
      - level1-server
      - level1-workstation

- name: 1.8.3 | PATCH | Ensure last logged in user display is disabled | banner
  block:
      - name: 1.8.3 | PATCH | Ensure last logged in user display is disabled | gdm profile
        lineinfile:
            path: /etc/dconf/profile/gdm
            regexp: "^{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
            create: true
            mode: 0644
            owner: root
            group: root
        with_items:
            - {regexp: 'user-db', line: 'user-db:user' }
            - {regexp: 'system-db', line: 'system-db:gdm' }
            - {regexp: 'file-db', line: 'file-db:/usr/share/gdm/greeter-dconf-defaults' }

      - name: 1.8.3 | PATCH | Ensure last logged in user display is disabled | login screen
        lineinfile:
            path: /etc/dconf/db/gdm.d/00-login-screen
            regexp: "^{{ item.regexp }}"
            line: "{{ item.line }}"
            state: present
            create: true
            mode: 0644
            owner: root
            group: root
        with_items:
            - { regexp: '\[org\/gnome\/login-screen\]', line: '[org/gnome/login-screen]' }
            - { regexp: 'disable-user-list', line: 'disable-user-list=true' }
  when:
      - "'gdm' in ansible_facts.packages"
      - not rhel7cis_gui
      - rhel7cis_rule_1_8_3
  tags:
      - rule_1.8.3
      - level1-server
      - level1-workstation

- name: 1.8.4 | PATCH | Ensure XDCMP is not enabled
  lineinfile:
      path: /etc/gdm/custom.conf
      regexp: ^Enable(\s|)=(\s|)true
      state: absent
      create: true
      owner: root
      group: root
      mode: 0644
  when:
      - "'gdm' in ansible_facts.packages"
      - not rhel7cis_gui
      - rhel7cis_rule_1_8_4
  tags:
      - rule_1.8.4
      - level1-server
      - level1-workstation

---

- name: "1.9 | PATCH | Ensure updates, patches, and additional security software are installed"
  package:
      name: "*"
      state: latest
  when:
      - rhel7cis_rule_1_9
      - not system_is_ec2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_1.9
      - skip_ansible_lint
  vars:
      ansible_python_interpreter: /bin/python


---

- name: "2.1.1 | PATCH | Ensure xinetd is not installed"
  package:
      name: xinetd
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - ("'xinetd' in ansible_facts.packages") and not rhel7cis_xinetd_required
      - rhel7cis_rule_2_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.1.1

---

- name: "2.2.1.1 | PATCH | Ensure time synchronization is in use | service install"
  package:
      name: "{{ rhel7cis_time_synchronization }}"
      state: present
  when:
      - rhel7cis_rule_2_2_1_1
      - not system_is_container
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.2.1.1
  vars:
      ansible_python_interpreter: /bin/python

- name: "2.2.1.1 | PATCH | Ensure time synchronization is in use | service start"
  service:
      name: "{{ rhel7cis_time_synchronization }}d"
      state: started
      enabled: true
  when:
      - rhel7cis_rule_2_2_1_1
      - not system_is_container
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.2.1.1

- name: "2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop ntp"
  service:
      name: ntpd
      state: stopped
      enabled: false
  when:
      - "'ntp' in ansible_facts.packages"
      - rhel7cis_time_synchronization == "chrony"
      - rhel7cis_rule_2_2_1_1
      - not system_is_container
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.2.1.1

- name: "2.2.1.1 | PATCH | Ensure time synchronization is in use - service stop chrony"
  service:
      name: chronyd
      state: stopped
      enabled: false
  when:
      - rhel7cis_time_synchronization == "ntp" and "'chrony' in ansible_facts.packages"
      - rhel7cis_rule_2_2_1_1
      - not system_is_container
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.2.1.1

- name: "2.2.1.2 | PATCH | Ensure chrony is configured"
  block:
      - name: "2.2.1.2 | PATCH | Ensure chrony is configured | modify /etc/chrony.conf"
        template:
            src: chrony.conf.j2
            dest: /etc/chrony.conf
            owner: root
            group: root
            mode: 0644

      - name: "2.2.1.2 | PATCH | Ensure chrony is configured | modify /etc/sysconfig/chronyd"
        lineinfile:
            dest: /etc/sysconfig/chronyd
            regexp: "^(#)?OPTIONS"
            line: "OPTIONS=\"-u chrony\""
            state: present
            create: true
            owner: root
            group: root
            mode: 0640
  when:
      - rhel7cis_time_synchronization == "chrony"
      - rhel7cis_rule_2_2_1_2
      - not system_is_container
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.2.1.2

- name: "2.2.1.3 | PATCH | Ensure ntp is configured"
  block:
      - name: "2.2.1.3 | PATCH | Ensure ntp is configured | modify /etc/ntp.conf"
        template:
            src: ntp.conf.j2
            dest: /etc/ntp.conf
            owner: root
            group: root
            mode: 0644

      - name: "2.2.1.3 | PATCH | Ensure ntp is configured | modify /etc/sysconfig/ntpd"
        lineinfile:
            dest: /etc/sysconfig/ntpd
            regexp: "^(#)?OPTIONS"
            line: "OPTIONS=\"-u ntp:ntp\""

      - name: "2.2.1.3 | PATCH | Ensure ntp is configured | modify /usr/lib/systemd/system/ntpd.service"
        lineinfile:
            dest: /usr/lib/systemd/system/ntpd.service
            regexp: "^(#)?ExecStart"
            line: "ExecStart=/usr/sbin/ntpd -u ntp:ntp $OPTIONS"
  when:
      - rhel7cis_time_synchronization == "ntp"
      - rhel7cis_rule_2_2_1_3
      - not system_is_container
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.2.1.3

---

- name: "2.2.2 | PATCH | Ensure X11 Server components are not installed"
  package:
      state: absent
      name:
          - "@X Window System"
          - "xorg-x11*"
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_xwindows_required
      - rhel7cis_rule_2_2_2
  tags:
      - level1-server
      - level1-workstation
      - xwindows
      - patch
      - rule_2.2.2

- name: "2.2.3 | PATCH | Ensure Avahi Server is not installed | disabled"
  service:
      name: avahi-daemon
      state: stopped
      enabled: false
  when:
      - not rhel7cis_avahi_server
      - "'avahi' in ansible_facts.packages"
      - rhel7cis_rule_2_2_3
  tags:
      - level1-server
      - level1-workstation
      - avahi
      - services
      - patch
      - rule_2.2.3

- name: "2.2.4 | PATCH | Ensure CUPS is not installed"
  package:
      name: cups
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_cups_server
      - "'cups' in ansible_facts.packages"
      - rhel7cis_rule_2_2_4
  tags:
      - level1-server
      - level1-workstation
      - cups
      - services
      - patch
      - rule_2.2.4

- name: "2.2.5 | PATCH | Ensure DHCP Server is not installed"
  package:
      name: dhcp
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_dhcp_server
      - "'dhcp' in ansible_facts.packages"
      - rhel7cis_rule_2_2_5
  tags:
      - level1-server
      - level1-workstation
      - dhcp
      - services
      - patch
      - rule_2.2.5

- name: "2.2.6 | PATCH | Ensure LDAP server is not installed"
  package:
      name: openldap-servers
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_ldap_server
      - "'openldap-servers' in ansible_facts.packages"
      - rhel7cis_rule_2_2_6
  tags:
      - level1-server
      - level1-workstation
      - ldap
      - services
      - patch
      - rule_2.2.6

- name: "2.2.7 | PATCH | Ensure DNS server is not installed"
  package:
      name: bind
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_named_server
      - "'bind' in ansible_facts.packages"
      - rhel7cis_rule_2_2_7
  tags:
      - level1-server
      - level1-workstation
      - dns
      - services
      - patch
      - rule_2.2.7

- name: "2.2.8 | PATCH | Ensure FTP server is not installed"
  package:
      name: vsftpd
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_vsftpd_server
      - "'vsftpd' in ansible_facts.packages"
      - rhel7cis_rule_2_2_8
  tags:
      - level1-server
      - level1-workstation
      - ftp
      - services
      - patch
      - rule_2.2.8

- name: "2.2.9 | PATCH | Ensure HTTP server is not installed"
  package:
      name: httpd
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_httpd_server
      - "'httpd' in ansible_facts.packages"
      - rhel7cis_rule_2_2_9
  tags:
      - level1-server
      - level1-workstation
      - httpd
      - services
      - patch
      - rule_2.2.9

- name: "2.2.10 | PATCH | Ensure IMAP and POP3 server is not installed"
  package:
      name: dovecot
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_dovecot_server
      - "'dovecot' in ansible_facts.packages"
      - rhel7cis_rule_2_2_10
  tags:
      - level1-server
      - level1-workstation
      - dovecot
      - services
      - patch
      - rule_2.2.10

- name: "2.2.11 | PATCH | Ensure Samba server is not installed"
  package:
      name: samba
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_smb_server
      - "'samba' in ansible_facts.packages"
      - rhel7cis_rule_2_2_11
  tags:
      - level1-server
      - level1-workstation
      - samba
      - services
      - patch
      - rule_2.2.11

- name: "2.2.12 | PATCH | Ensure HTTP Proxy server is not installed"
  package:
      name: squid
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_squid_server
      - "'squid' in ansible_facts.packages"
      - rhel7cis_rule_2_2_12
  tags:
      - level1-server
      - level1-workstation
      - squid
      - services
      - patch
      - rule_2.2.12

- name: "2.2.13 | PATCH | Ensure net-snmp is not installed"
  package:
      name: net-snmp
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_snmp_server
      - "'net-snmp' in ansible_facts.packages"
      - rhel7cis_rule_2_2_13
  tags:
      - level1-server
      - level1-workstation
      - squid
      - services
      - patch
      - rule_2.2.13

- name: "2.2.14 | PATCH | Ensure NIS server is not installed"
  package:
      name: ypserv
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_nis_server
      - "'ypserv' in ansible_facts.packages"
      - rhel7cis_rule_2_2_14
  tags:
      - level1-server
      - level1-workstation
      - nis
      - services
      - patch
      - rule_2.2.14

- name: "2.2.15 | PATCH | Ensure telnet-server is not installed"
  package:
      name: telnet-server
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_telnet_server
      - "'telnet-server' in ansible_facts.packages"
      - rhel7cis_rule_2.2_15
  tags:
      - level1-server
      - level1-workstation
      - telnet
      - services
      - patch
      - rule_2.2.15

- name: "2.2.16 | PATCH | Ensure mail transfer agent is configured for local-only mode"
  lineinfile:
      dest: /etc/postfix/main.cf
      regexp: "^(#)?inet_interfaces"
      line: "inet_interfaces = loopback-only"
  notify: restart postfix
  when:
      - not rhel7cis_is_mail_server
      - "'postfix' in ansible_facts.packages"
      - rhel7cis_rule_2_2_16
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_2.2.16

- name: "2.2.17 | PATCH | Ensure nfs-utils is not installed or the nfs-server service is masked"
  block:
      - name: "2.2.17 | PATCH | Ensure nfs-utils is not installed or the nfs-server service is masked | nfs-utils "
        package:
            name: nfs-utils
            state: absent
        vars:
            ansible_python_interpreter: /bin/python
        when:
            - not rhel7cis_nfs_rpc_server and not rhel7cis_nfs_server

      - name: "2.2.17 | PATCH | Ensure nfs-utils is not installed or the nfs-server service is masked | nfs-server "
        systemd:
            name: nfs-server
            masked: true
        when:
            - rhel7cis_nfs_rpc_server and not rhel7cis_nfs_server
  when:
      - "'nfs-utils' in ansible_facts.packages"
      - rhel7cis_rule_2_2_17
  tags:
      - level1-server
      - level1-workstation
      - nfs
      - services
      - patch
      - rule_2.2.17

- name: "2.2.18 | PATCH | Ensure rpcbind is not installed or the rpcbind services are masked"
  block:
      - name: "2.2.18 | PATCH | Ensure rpcbind is not installed or the rpcbind services are masked | rpcbind"
        package:
            name: rpcbind
            state: absent
        vars:
            ansible_python_interpreter: /bin/python
        when:
            - not rhel7cis_nfs_rpc_server and not rhel7cis_rpc_server

      - name: "2.2.18 | PATCH | Ensure rpcbind is not installed or the rpcbind services are masked | rpcbind-server"
        systemd:
            name: rpcbind
            masked: true
        when:
            - rhel7cis_nfs_rpc_server and not rhel7cis_rpc_server

      - name: "2.2.18 | PATCH | Ensure rpcbind is not installed or the rpcbind services are masked | rpcbind-server"
        systemd:
            name: rpcbind.socket
            masked: true
        when:
            - rhel7cis_nfs_rpc_server and not rhel7cis_rpc_server
  when:
      - "'rpcbind' in ansible_facts.packages"
      - rhel7cis_rule_2_2_18
  tags:
      - level1-server
      - level1-workstation
      - rpc
      - services
      - patch
      - rule_2.2.18

- name: "2.2.19 | PATCH | Ensure rsync is not installed or the rsyncd services are masked"
  block:
      - name: "2.2.19 | PATCH | Ensure rsync is not installed or the rsyncd services are masked | pkg removal"
        package:
            name: rsync
            state: absent
        vars:
            ansible_python_interpreter: /bin/python

      - name: "2.2.19 | PATCH | Ensure rsync is not installed or the rsyncd services are masked | Mask "
        systemd:
            name: rsyncd
            masked: true

  when:
      - not rhel7cis_rsyncd_server
      - not audit_content == 'git'  # Required by git for audit
      - "'rsync' in ansible_facts.packages"
      - rhel7cis_rule_2_2_19
  tags:
      - level1-server
      - level1-workstation
      - rsync
      - services
      - patch
      - rule_2.2.19

---

- name: "2.3.1 | PATCH | Ensure NIS client is not installed"
  package:
      name: ypbind
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_ypbind_required
      - "'ypbind' in ansible_facts.packages"
      - rhel7cis_rule_2_3_1
  tags:
      - level1-server
      - level1-workstation
      - nis
      - patch
      - rule_2.3.1

- name: "2.3.2 | PATCH | Ensure rsh client is not installed"
  package:
      name: rsh
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_rsh_required
      - "'rsh' in ansible_facts.packages"
      - rhel7cis_rule_2_3_2
  tags:
      - level1-server
      - level1-workstation
      - rsh
      - patch
      - rule_2.3.2

- name: "2.3.3 | PATCH | Ensure talk client is not installed"
  package:
      name: talk
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_talk_required
      - "'talk' in ansible_facts.packages"
      - rhel7cis_rule_2_3_3
  tags:
      - level1-server
      - level1-workstation
      - talk
      - patch
      - rule_2.3.3

- name: "2.3.4 | PATCH | Ensure telnet client is not installed"
  package:
      name: telnet
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'telnet' in ansible_facts.packages"
      - not rhel7cis_telnet_required
      - rhel7cis_rule_2_3_4
  tags:
      - level1-server
      - level1-workstation
      - telnet
      - patch
      - rule_2.3.4

- name: "2.3.5 | PATCH | Ensure LDAP client is not installed"
  package:
      name: openldap-clients
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - not rhel7cis_openldap_clients_required
      - "'openldap-clients' in ansible_facts.packages"
      - rhel7cis_rule_2_3_5
  tags:
      - level1-server
      - level1-workstation
      - ldap_client
      - patch
      - rule_2.3.5

---

- name: "2.4 | Ensure nonessential services are removed or masked (Manual)"
  debug:
      msg: "<----- not required"
  when:
      - rhel7cis_rule_2_4
  tags:
      - level1-server
      - level1-workstation
      - rule_2.4


---

- name: "3.1.1 | PATCH | Disable IPv6 | grub"
  block:
      - name: "3.1.1 | PATCH | Disable IPv6 | grub"
        replace:
            dest: /etc/default/grub
            regexp: '(^GRUB_CMDLINE_LINUX\s*\=\s*)(?:")(.+)(?<!ipv6.disable=1)(?:")'
            replace: '\1"\2 ipv6.disable=1"'
        register: grub_ipv6
        notify: grub2cfg

      - name: "3.1.1 | FACT | Disable IPv6 | grub"
        set_fact:
            change_requires_reboot: true
        when: grub_ipv6.changed
  when:
      - not rhel7cis_ipv6_required
      - rhel7cis_rule_3_1_1
  tags:
      - level2-server
      - level2-workstation
      - rule_3.1.1
      - patch

- name: "3.1.2| Ensure wireless interfaces are disabled"
  block:
      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Check if wifi is enabled"
        shell: nmcli radio wifi
        register: rhel_07_wifi_enabled
        check_mode: false
        changed_when: rhel_07_wifi_enabled.stdout != "disabled"

      - name: "3.1.2 | PATCH | Ensure wireless interfaces are disabled | Disable wifi if enabled"
        command: nmcli radio wifi off
        when: rhel_07_wifi_enabled is changed

  when:
      - rhel7cis_rule_3_1_2
      - "'NetworkManager' in ansible_facts.packages"
  tags:
      - level1-server
      - level2-workstation
      - rule_3.1.2

---
- name: "3.2.1 | PATCH | Ensure IP forwarding is disabled | IPv4"
  block:
      - name: "3.2.1 | PATCH | Ensure IP forwarding is disabled | IPv4"
        sysctl:
            name: net.ipv4.ip_forward
            value: '0'
            state: present
            reload: true
            ignoreerrors: true
        notify:
            - sysctl flush ipv4 route table

      - name: "3.2.1 | PATCH | Ensure IP forwarding is disabled IPv6"
        sysctl:
            name: net.ipv6.conf.all.forwarding
            value: '0'
            state: present
            reload: true
            ignoreerrors: true
        notify:
            - sysctl flush ipv6 route table
        when:
            - rhel7cis_ipv6_required
  when:
      - not rhel7cis_is_router
      - rhel7cis_rule_3_2_1
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.2.1

- name: "3.2.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - not rhel7cis_is_router
      - rhel7cis_rule_3_2_2
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.2.2

---
- name: "3.3.1 | PATCH | Ensure source routed packets are not accepted"
  block:
      - name: "3.3.1 | PATCH | Ensure source routed packets are not accepted | IPv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
            - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
        notify:
            - sysctl flush ipv4 route table

      - name: "3.3.1 | PATCH | Ensure source routed packets are not accepted | IPv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv6.conf.all.accept_source_route, value: 0 }
            - { name: net.ipv6.conf.default.accept_source_route, value: 0 }
        notify:
            - sysctl flush ipv6 route table
        when:
            - rhel7cis_ipv6_required
  when:
      - rhel7cis_rule_3_3_1
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.1

- name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted"
  block:
      - name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted | IPv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
            - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
        notify:
            - sysctl flush ipv4 route table

      - name: "3.3.2 | PATCH | Ensure ICMP redirects are not accepted | IPv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
            - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
        notify:
            - sysctl flush ipv6 route table
        when:
            - rhel7cis_ipv6_required
  when:
      - rhel7cis_rule_3_3_2
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.2

- name: "3.3.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_3_3
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.3

- name: "3.3.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_3_4
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.4

- name: "3.3.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_3_5
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.5

- name: "3.3.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_3_6
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.6

- name: "3.3.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_3_7
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.7

- name: "3.3.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  notify:
      - sysctl flush ipv4 route table
  when:
      - rhel7cis_rule_3_3_8
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.8

- name: "3.3.9 |  PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  when:
      - rhel7cis_ipv6_required
      - rhel7cis_rule_3_3_9
  tags:
      - level1-server
      - level1-workstation
      - sysctl
      - patch
      - rule_3.3.9

---

- name: "3.4.1 | PATCH | Ensure DCCP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install dccp(\\s|$)"
      line: "install dccp /bin/true"
      create: true
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_3_4_1
  tags:
      - level2-server
      - level2-workstation
      - patch
      - rule_3.4.1

- name: "3.4.2 | PATCH | Ensure SCTP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install sctp(\\s|$)"
      line: "install sctp /bin/true"
      create: true
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_3_4_2
  tags:
      - level2-server
      - level2-workstation
      - patch
      - rule_3.4.2

---

- name: "3.5.1.1 | PATCH | Ensure FirewallD is installed"
  package:
      name: firewalld
      state: present
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'firewalld' not in ansible_facts.packages"
      - rhel7cis_rule_3_5_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.1.1

- name: "3.5.1.2 | PATCH | Ensure iptables-services not installed with firewalld"
  package:
      name: iptables-services
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'iptables-services' in ansible_facts.packages"
      - rhel7cis_rule_3_5_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.1.2

- name: "3.5.1.3 | PATCH | Ensure iptables-services not installed with firewalld"
  package:
      name: nftables
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'nftables' in ansible_facts.packages"
      - rhel7cis_rule_3_5_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.1.3

- name: "3.5.1.4 | PATCH | Ensure firewalld service is enabled and running"
  systemd:
      name: firewalld
      state: started
      enabled: true
      masked: false
  when:
      - rhel7cis_rule_3_5_1_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.1.4

- name: "3.5.1.5 | PATCH | Ensure firewalld default zone is set"
  block:
      - name: "3.5.1.5 | AUDIT | Ensure default zone is set"
        command: firewall-cmd --get-default-zone
        changed_when: false
        check_mode: false
        register: current_default_zone

      - name: "3.5.1.5 | PATCH | Ensure default zone is set"
        command: firewall-cmd --set-default-zone="{{ rhel7cis_default_zone }}"
        when:
            - current_default_zone.stdout != rhel7cis_default_zone
  when:
      - rhel7cis_rule_3_5_1_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.1.5

- name: "3.5.1.6 | AUDIT | Ensure network interfaces are assigned to appropriate zone"
  block:
      - name: "3.5.1.6 | AUDIT | Ensure network interfaces are assigned to appropriate zone | Get list of interfaces and policies"
        shell: "nmcli -t connection show | awk -F: '{ if($4){print $4} }' | while read INT; do firewall-cmd --get-active-zones | grep -B1 $INT; done"
        changed_when: false
        check_mode: false
        register: rhel7cis_3_5_1_6_interfacepolicy

      - name: "3.5.1.6 | AUDIT | Ensure network interfaces are assigned to appropriate zone | Get list of interfaces and policies | Show the interface to policy"
        debug:
            msg:
                - "The items below are the policies tied to the interfaces, please correct as needed"
                - "{{ rhel7cis_3_5_1_6_interfacepolicy.stdout_lines }}"
  when:
      - rhel7cis_rule_3_5_1_6
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_3.5.1.6

- name: "3.5.1.7 | AUDIT | Ensure firewalld drops unnecessary services and ports"
  block:
      - name: "3.5.1.7 | AUDIT | Ensure firewalld drops unnecessary services and ports | Get list of services and ports"
        shell: "firewall-cmd --get-active-zones | awk '!/:/ {print $1}' | while read ZN; do firewall-cmd --list-all --zone=$ZN; done"
        changed_when: false
        check_mode: false
        register: rhel7cis_3_5_1_7_servicesport

      - name: "3.5.1.7 | AUDIT | Ensure firewalld drops unnecessary services and ports | Show services and ports"
        debug:
            msg:
                - "The items below are the services and ports that are accepted, please correct as needed"
                - "{{ rhel7cis_3_5_1_7_servicesport.stdout_lines }}"
  when:
      - rhel7cis_rule_3_5_1_7
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_3.5.1.7

---

- name: "3.5.2.1 | PATCH | Ensure nftables is installed"
  package:
      name: nftables
      state: present
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'nftables' not in ansible_facts.packages"
      - rhel7cis_rule_3_5_2_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.1

- name: "3.5.2.2 | PATCH | Ensure firewalld is either not installed or masked with nftables"
  package:
      name: firewalld
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'firewalld' in ansible_facts.packages"
      - rhel7cis_rule_3_5_2_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.2

- name: "3.5.2.3 | PATCH | Ensure iptables-services not installed with nftables"
  package:
      name: iptables-services
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'iptables-services' in ansible_facts.packages"
      - rhel7cis_rule_3_5_2_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.3

- name: "3.5.2.4 | PATCH | Ensure iptables are flushed with nftables"
  block:
      - name: "3.5.2.4 | PATCH | Ensure iptables are flushed with nftables| Flush IPv4 tables"
        command: iptables -F

      - name: "3.5.2.4 | PATCH | Ensure iptables are flushed with nftables | Flush IPv6 tables"
        command: ip6tables -F
        when:
            - rhel7cis_ipv6_required
  when:
      - rhel7cis_firewall != "iptables"
      - rhel7cis_rule_3_5_2_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.4

- name: "3.5.2.5 | PATCH | Ensure an nftables table exists"
  block:
      - name: "3.5.2.5 | AUDIT | Ensure an nftables table exists | Check for tables"
        command: nft list tables
        register: rhel7cis_3_5_2_5_nft_tables

      - name: "3.5.2.5 | AUDIT | Ensure an nftables table exists | Show existing tables"
        debug:
            msg:
                - "Below are the current nft tables, please review"
                - "{{ rhel7cis_3_5_2_5_nft_tables.stdout_lines }}"
        when:
            - rhel7cis_3_5_2_5_nft_tables.stdout | length > 0

      - name: "3.5.2.5 | AUDIT | Ensure an nftables table exists | Alert on no tables"
        debug:
            msg:
                - "WARNING!! You currently have no nft tables, please review your setup"
                - 'Use the command "nft create table inet <table name>" to create a new table'
        when:
            - rhel7cis_3_5_2_5_nft_tables.stdout | length == 0
            - not rhel7cis_nft_tables_autoNewTable

      - name: "3.5.2.5 | PATCH | Ensure an nftables table exists | Create table if needed"
        command: nft create table inet "{{ rhel7cis_nft_tables_tableName }}"
        failed_when: false
        when:
            - rhel7cis_nft_tables_autoNewTable
  when:
      - rhel7cis_rule_3_5_2_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.5

- name: "3.5.2.6 | PATCH | Ensure nftables base chains exist"
  block:
      - name: "3.5.2.6 | AUDIT | Ensure nftables base chains exist | Get current chains for INPUT"
        shell: nft list ruleset | grep 'hook input'
        register: rhel7cis_3_5_2_6_input_chains

      - name: "3.5.2.6 | AUDIT | Ensure nftables base chains exist | Get current chains for FORWARD"
        shell: nft list ruleset | grep 'hook forward'
        register: rhel7cis_3_5_2_6_forward_chains

      - name: "3.5.2.6 | AUDIT | Ensure nftables base chains exist | Get current chains for OUTPUT"
        shell: nft list ruleset | grep 'hook output'
        register: rhel7cis_3_5_2_6_output_chains

      - name: "3.5.2.6 | AUDIT | Ensure nftables base chains exist | Display chains for review"
        debug:
            msg:
                - "Below are the current INPUT chains"
                - "{{ rhel7cis_3_5_2_6_input_chains.stdout_lines }}"
                - "Below are the current FORWARD chains"
                - "{{ rhel7cis_3_5_2_6_forward_chains.stdout_lines }}"
                - "Below are teh current OUTPUT chains"
                - "{{ rhel7cis_3_4_2_6_output_chains.stdout_lines }}"
        when:
            - not rhel7cis_nft_tables_autoChainCreate

      - name: "3.5.2.6 | PATCH | Ensure nftables base chains exist | Create chains if needed"
        command: "{{ item }}"
        failed_when: false
        with_items:
            - nft create chain inet "{{ rhel7cis_nft_tables_tableName }}" input { type filter hook input priority 0 \; }
            - nft create chain inet "{{ rhel7cis_nft_tables_tableName }}" forward { type filter hook forward priority 0 \; }
            - nft create chain inet "{{ rhel7cis_nft_tables_tableName }}" output { type filter hook output priority 0 \; }
        when:
            - rhel7cis_nft_tables_autoChainCreate
  when:
      - rhel7cis_rule_3_5_2_6
  tags:
      - skip_ansible_lint
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.6

- name: "3.5.2.7 | PATCH | Ensure nftables loopback traffic is configured"
  block:
      - name: "3.5.2.7 | AUDIT | Ensure nftables loopback traffic is configured | Gather iif lo accept existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'iif "lo" accept'
        changed_when: false
        failed_when: false
        register: rhel7cis_3_5_2_7_iiflo

      - name: "3.5.2.7 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip saddr existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip saddr'
        changed_when: false
        failed_when: false
        register: rhel7cis_3_5_2_7_ipsaddr

      - name: "3.5.2.7 | AUDIT | Ensure nftables loopback traffic is configured | Gather ip6 saddr existence"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep 'ip6 saddr'
        changed_when: false
        failed_when: false
        register: rhel7cis_3_5_2_7_ip6saddr

      - name: "3.5.2.7 | PATCH | Ensure nftables loopback traffic is configured | Set iif lo accept rule"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" input iif lo accept
        when:
            - '"iif \"lo\" accept" not in rhel7cis_3_5_2_7_iiflo.stdout'

      - name: "3.5.2.7 | PATCH | Ensure nftables loopback traffic is configured | Set ip sddr rule"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" input ip saddr 127.0.0.0/8 counter drop
        when:
            - '"ip saddr 127.0.0.0/8 counter packets 0 bytes 0 drop" not in rhel7cis_3_5_2_7_ipsaddr.stdout'

      - name: "3.5.2.7 | PATCH | Ensure nftables loopback traffic is configured | Set ip6 saddr rule"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" input ip6 saddr ::1 counter drop
        when:
            - '"ip6 saddr ::1 counter packets 0 bytes 0 drop" not in rhel7cis_3_5_2_7_ip6saddr.stdout'
  when:
      - rhel7cis_rule_3.5.2.7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.7

- name: "3.5.2.8 | PATCH | Ensure nftables outbound and established connections are configured"
  block:
      - name: "3.5.2.8 | AUDIT | Ensure nftables outbound and established connections are configured | Gather incoming connection rules"
        shell: nft list ruleset | awk '/hook input/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
        changed_when: false
        failed_when: false
        register: rhel7cis_3_5_2_8_inconnectionrule

      - name: "3.5.2.8 | AUDIT | Ensure nftables outbound and established connections are configured | Gather outbound connection rules"
        shell: nft list ruleset | awk '/hook output/,/}/' | grep -E 'ip protocol (tcp|udp|icmp) ct state'
        changed_when: false
        failed_when: false
        register: rhel7cis_3_5_2_8_outconnectionrule

      - name: "3.5.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add input tcp established accpet policy"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" input ip protocol tcp ct state established accept
        become: true
        when:
            - '"ip protocol tcp ct state established accept" not in rhel7cis_3_5_2_8_inconnectionrule.stdout'

      - name: "3.5.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add input udp established accpet policy"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" input ip protocol udp ct state established accept
        become: true
        when:
            - '"ip protocol udp ct state established accept" not in rhel7cis_3_5_2_8_inconnectionrule.stdout'

      - name: "3.5.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add input icmp established accpet policy"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" input ip protocol icmp ct state established accept
        become: true
        when:
            - '"ip protocol icmp ct state established accept" not in rhel7cis_3_5_2_8_inconnectionrule.stdout'

      - name: "3.5.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add output tcp new, related, established accpet policy"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" output ip protocol tcp ct state new,related,established accept
        become: true
        when:
            - '"ip protocol tcp ct state established,related,new accept" not in rhel7cis_3_5_2_8_outconnectionrule.stdout'

      - name: "3.5.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add output udp new, related, established accpet policy"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" output ip protocol udp ct state new,related,established accept
        become: true
        when:
            - '"ip protocol udp ct state established,related,new accept" not in rhel7cis_3_5_2_8_outconnectionrule.stdout'

      - name: "3.5.2.8 | PATCH | Ensure nftables outbound and established connections are configured | Add output icmp new, related, established accpet policy"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" output ip protocol icmp ct state new,related,established accept
        become: true
        when:
            - '"ip protocol icmp ct state established,related,new accept" not in rhel7cis_3_5_2_8_outconnectionrule.stdout'
  when:
      - rhel7cis_rule_3_5_2_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.8

- name: "3.5.2.9 | PATCH | Ensure nftables default deny firewall policy"
  block:
      - name: "3.5.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for hook input deny policy"
        shell: nft list table inet "{{ rhel7cis_nft_tables_tableName }}" | grep 'hook input'
        become: true
        failed_when: false
        changed_when: false
        register: rhel7cis_3_5_2_9_inputpolicy

      - name: "3.5.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for hook forward deny policy"
        shell: nft list table inet "{{ rhel7cis_nft_tables_tableName }}" | grep 'hook forward'
        become: true
        failed_when: false
        changed_when: false
        register: rhel7cis_3_5_2_9_forwardpolicy

      - name: "3.5.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for hook output deny policy"
        shell: nft list table inet "{{ rhel7cis_nft_tables_tableName }}" | grep 'hook output'
        become: true
        failed_when: false
        changed_when: false
        register: rhel7cis_3_5_2_9_outputpolicy

      - name: "3.5.2.9 | AUDIT | Ensure nftables default deny firewall policy | Check for SSH allow"
        shell: nft list table inet "{{ rhel7cis_nft_tables_tableName }}" | grep 'ssh'
        become: true
        failed_when: false
        changed_when: false
        register: rhel7cis_3_5_2_9_sshallowcheck

      - name: "3.5.2.9 | PATCH | Ensure nftables default deny firewall policy | Enable SSH traffic"
        command: nft add rule inet "{{ rhel7cis_nft_tables_tableName }}" input tcp dport ssh accept
        become: true
        when:
            - '"tcp dport ssh accept" not in rhel7cis_3_5_2_9_sshallowcheck.stdout'

      - name: "3.5.2.9 | PATCH | Ensure nftables default deny firewall policy | Set hook input deny policy"
        command: nft chain inet "{{ rhel7cis_nft_tables_tableName }}" input { policy drop \; }
        become: true
        when:
            - '"type filter hook input priority 0; policy drop;" not in rhel7cis_3_5_2_9_inputpolicy.stdout'

      - name: "3.5.2.9 | PATCH | EEnsure nftables default deny firewall policy | Create hook forward deny policy"
        command: nft chain inet "{{ rhel7cis_nft_tables_tableName }}" forward { policy drop \; }
        become: true
        when:
            - '"type filter hook forward priority 0; policy drop;" not in rhel7cis_3_5_2_9_forwardpolicy.stdout'

      - name: "3.5.2.9 | PATCH | Ensure nftables default deny firewall policy | Create hook output deny policy"
        command: nft chain inet "{{ rhel7cis_nft_tables_tableName }}" output { policy drop \; }
        become: true
        when:
            - '"type filter hook output priority 0; policy drop;" not in rhel7cis_3_5_2_9_outputpolicy.stdout'
  when:
      - rhel7cis_rule_3_5_2_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.9

- name: "3.5.2.10 | PATCH | Ensure nftables service is enabled"
  systemd:
      name: nftables
      enabled: true
  become: true
  when:
      - rhel7cis_rule_3_5_2_10
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.10

- name: "3.5.2.11 | PATCH | Ensure nftables rules are permanent"
  lineinfile:
      path: /etc/sysconfig/nftables.conf
      state: present
      insertafter: EOF
      line: include "/etc/nftables/inet-{{ rhel7cis_nft_tables_tableName }}"
  become: true
  when:
      - rhel7cis_rule_3_5_2_11
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.2.11

---

- name: "3.5.3.1.1 | PATCH | Ensure iptables packages are installed"
  package:
      name: "{{ item }}"
      state: present
  loop:
      - iptables
      - iptables-services
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'iptables' not in ansible_facts.packages or
        'iptables-services' not in ansible_facts.packages"
      - rhel7cis_rule_3_5_3_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.1.1

- name: "3.5.3.1.2 | PATCH | Ensure nftables is not installed with iptables"
  package:
      name: nftables
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'nftables' in ansible_facts.packages"
      - rhel7cis_rule_3_5_3_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.1.2

- name: "3.5.3.1.3 | PATCH | Ensure firewalld is either not installed or masked with iptables"
  package:
      name: firewalld
      state: absent
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - "'firewalld' in ansible_facts.packages"
      - rhel7cis_rule_3_5_3_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.1.3

---

- name: "3.5.3.2.1 | PATCH | Ensure iptables loopback traffic is configured"
  block:
      - name: "3.5.3.2.1 | PATCH | Ensure iptables loopback traffic is configured | INPUT loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT

      - name: "3.5.3.2.1 | PATCH | Ensure iptables loopback traffic is configured | OUTPUT loopback ACCEPT"
        iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT

      - name: "3.5.3.2.1 | PATCH | Ensure iptables loopback traffic is configured | OUTPUT loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            source: 127.0.0.0/8
            jump: DROP
  when:
      - rhel7cis_rule_3_5_3_2_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.2.1
      - iptables

- name: "3.5.3.2.2 | PATCH | Ensure iptables outbound and established connections are configured"
  iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
  when:
      - rhel7cis_rule_3_5_3_2_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.2.2
      - iptables

- name: "3.5.3.2.3 | AUDIT | Ensure iptables firewall rules exist for all open ports"
  block:
      - name: "3.5.3.2.3 | AUDIT | Ensure iptables firewall rules exist for all open ports | Get list of open ports"
        command: ss -4tuln
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel7cis_3_5_3_2_3_open_ports

      - name: "3.5.3.2.3 | AUDIT | Ensure iptables firewall rules exist for all open ports | Get list of rules"
        command: iptables -L INPUT -v -n
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel7cis_3_5_3_2_3_current_rules

      - name: "3.5.3.2.3 | AUDIT | Ensure iptables firewall rules exist for all open ports | Alert about settings"
        debug:
            msg:
                - "ALERT!!!!Below is the list the open ports and current rules"
                - "Please create a rule for any open port that does not have a current rule"
                - "Open Ports:"
                - "{{ rhel7cis_3_5_3_2_3_open_ports.stdout_lines }}"
                - "Current Rules:"
                - "{{ rhel7cis_3_5_3_2_3_current_rules.stdout_lines }}"
  when:
      - rhel7cis_rule_3_5_3_2_3
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_3.5.3.2.3
      - iptables

- name: "3.5.3.2.4 | PATCH | Ensure iptables default deny firewall policy"
  block:
      - name: "3.5.3.2.4 | PATCH | Ensure iptables default deny firewall policy | Configure SSH to be allowed in"
        iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'

      - name: "3.5.3.2.4 | PATCH | Ensure iptables default deny firewall policy | Configure SSH to be allowed out"
        iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'

      - name: "3.5.3.2.4 | PATCH | Ensure iptables default deny firewall policy | Enable apt traffic"
        iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT

      - name: "3.5.3.2.4 | PATCH | Ensure iptables default deny firewall policy | Set drop items"
        iptables:
            policy: DROP
            chain: "{{ item }}"
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
  when:
      - rhel7cis_rule_3_5_3_2_4
      - not system_is_ec2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.2.4
      - iptables

- name: "3.5.3.2.5 | Ensure iptables rules are saved "
  block:
      - name: "3.5.3.2.5 | Ensure iptables rules are saved "
        shell: service iptables save
        changed_when: rhel7cis_iptables_save.rc == 0
        failed_when: rhel7cis_iptables_save.rc != 0
        register: rhel7cis_iptables_save
  when:
      - rhel7cis_save_iptables_cis_rules
      - rhel7cis_rule_3_5_3_2_1 or
        rhel7cis_rule_3_5_3_2_2 or
        rhel7cis_rule_3_5_3_2_3 or
        rhel7cis_rule_3_5_3_2_4 or
        rhel7cis_rule_3_5_3_2_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.2.5
      - iptables

- name: "3.5.3.2.6 | Ensure iptables is enabled and running"
  service:
      name: iptables
      state: started
      enabled: true
  when:
      - rhel7cis_rule_3_5_3_2_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.2.6
      - iptables

---

- name: "3.5.3.3.1 | PATCH | Ensure ip6tables loopback traffic is configured"
  block:
      - name: "3.5.3.3.1 | PATCH | Ensure ip6tables loopback traffic is configured | INPUT loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            in_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.5.3.3.1 | PATCH | Ensure ip6tables loopback traffic is configured | OUTPUT loopback ACCEPT"
        iptables:
            action: append
            chain: OUTPUT
            out_interface: lo
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.5.3.3.1 | PATCH | Ensure ip6tables loopback traffic is configured | OUTPUT loopback ACCEPT"
        iptables:
            action: append
            chain: INPUT
            source: ::1
            jump: DROP
            ip_version: ipv6
  when:
      - rhel7cis_rule_3_5_3_3_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.3.1
      - iptables
      - ip6tables

- name: "3.5.3.3.2 | PATCH | Ensure ip6tables outbound and established connections are configured"
  iptables:
      action: append
      chain: '{{ item.chain }}'
      protocol: '{{ item.protocol }}'
      match: state
      ctstate: '{{ item.ctstate }}'
      jump: ACCEPT
      ip_version: ipv6
  with_items:
      - { chain: OUTPUT, protocol: tcp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: udp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: OUTPUT, protocol: icmp, ctstate: 'NEW,ESTABLISHED' }
      - { chain: INPUT, protocol: tcp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: udp, ctstate: 'ESTABLISHED' }
      - { chain: INPUT, protocol: icmp, ctstate: 'ESTABLISHED' }
  when:
      - rhel7cis_rule_3_5_3_3_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.3.2
      - iptables
      - ip6tables

- name: "3.5.3.3.3 | AUDIT | Ensure ip6tables firewall rules exist for all open ports"
  block:
      - name: "3.5.3.3.3 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Get list of open ports"
        command: ss -6tuln
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel7cis_3_5_3_3_3_open_ports

      - name: "3.5.3.3.3 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Get list of rules"
        command: ip6tables -L INPUT -v -n
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel7cis_3_5_3_3_3_current_rules

      - name: "3.5.3.3.3 | AUDIT | Ensure ip6tables firewall rules exist for all open ports | Alert about settings"
        debug:
            msg:
                - "ALERT!!!!Below is the list the open ports and current rules"
                - "Please create a rule for any open port that does not have a current rule"
                - "Open Ports:"
                - "{{ rhel7cis_3_5_3_3_3_open_ports.stdout_lines }}"
                - "Current Rules:"
                - "{{ rhel7cis_3_5_3_3_3_current_rules.stdout_lines }}"
  when:
      - rhel7cis_rule_3_5_3_3_3
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_3.5.3.3.3
      - iptables
      - ip6tables

- name: "3.5.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy"
  block:
      - name: "3.5.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy | Configure SSH to be allowed in"
        iptables:
            chain: INPUT
            protocol: tcp
            destination_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
            ip_version: ipv6

      - name: "3.5.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy | Configure SSH to be allowed out"
        iptables:
            chain: OUTPUT
            protocol: tcp
            source_port: 22
            jump: ACCEPT
            ctstate: 'NEW,ESTABLISHED'
            ip_version: ipv6

      - name: "3.5.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy | Enable apt traffic"
        iptables:
            chain: INPUT
            ctstate: 'ESTABLISHED'
            jump: ACCEPT
            ip_version: ipv6

      - name: "3.5.3.3.4 | PATCH | Ensure ip6tables default deny firewall policy | Set drop items"
        iptables:
            policy: DROP
            chain: "{{ item }}"
            ip_version: ipv6
        with_items:
            - INPUT
            - FORWARD
            - OUTPUT
  when:
      - rhel7cis_rule_3_5_3_3_4
      - not system_is_ec2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.3.4
      - iptables
      - ip6tables

- name: "3.5.3.3.5 | Ensure ip6tables rules are saved "
  block:
      - name: "3.5.3.3.5 | Ensure ip6tables rules are saved "
        shell: service ip6tables save
        changed_when: rhel7cis_ip6tables_save.rc == 0
        failed_when: rhel7cis_ip6tables_save.rc != 0
        register: rhel7cis_ip6tables_save
  when:
      - rhel7cis_save_ip6tables_cis_rules
      - rhel7cis_rule_3_5_3_3_1 or
        rhel7cis_rule_3_5_3_3_2 or
        rhel7cis_rule_3_5_3_3_3 or
        rhel7cis_rule_3_5_3_3_4 or
        rhel7cis_rule_3_5_3_3_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.3.5
      - iptables
      - ip6tables

- name: "3.5.3.3.6 | Ensure ip6tables is enabled and running"
  service:
      name: ip6tables
      state: started
      enabled: true
  when:
      - rhel7cis_rule_3_5_3_3_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_3.5.3.3.6
      - iptables
      - ip6tables


---
- name: "4.1.1.1 | PATCH | Ensure auditd is installed"
  package:
      name: ['audit', 'audit-libs']
      state: present
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - rhel7cis_rule_4_1_1_1
  notify: restart auditd
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - rule_4.1.1.1

- name: "4.1.1.2 | PATCH | Ensure auditd service is enabled and running"
  service:
      name: auditd
      state: started
      enabled: true
  when:
      - not rhel7cis_skip_for_travis
      - rhel7cis_rule_4_1_1_2
      - ansible_connection != 'docker'
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.1.2

- name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
  block:
      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
        replace:
            dest: /etc/default/grub
            regexp: ^(GRUB_CMDLINE_LINUX=)(?:")(?!.*audit=1)(.+)(?:")$
            replace: '\1"\2 audit=1"'
        register: audit_grub
        notify: grub2cfg

      - name: "4.1.1.3 | PATCH | Ensure auditing for processes that start prior to auditd is enabled"
        set_fact:
            change_requires_reboot: true
        when:
            - audit_grub.changed

  when:
      - rhel7cis_rule_4_1_1_3
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.1.3

---

- name: "4.1.2.1 | PATCH | Ensure audit log storage size is configured"
  lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "^max_log_file( |=)"
      line: "max_log_file = 10"
      state: present
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_2_1
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.2.1

- name: "4.1.2.2 | PATCH | Ensure audit logs are not automatically deleted"
  lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "^max_log_file_action"
      line: "max_log_file_action = {{ rhel7cis_auditd['max_log_file_action'] }}"
      state: present
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_2_2
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.2.2

- name: "4.1.2.3 | PATCH | Ensure system is disabled when audit logs are full"
  lineinfile:
      dest: /etc/audit/auditd.conf
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
  with_items:
      - { regexp: '^space_left_action', line: "space_left_action = {{ rhel7cis_auditd['space_left_action'] }}" }
      - { regexp: '^action_mail_acct', line: "action_mail_acct = {{ rhel7cis_auditd['action_mail_acct'] }}" }
      - { regexp: '^admin_space_left_action', line: "admin_space_left_action = {{ rhel7cis_auditd['admin_space_left_action'] }}" }
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_2_3
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.2.3

- name: "4.1.2.4 | PATCH | Ensure audit_backlog_limit is sufficient"
  block:
      - name: "4.1.2.4 | AUDIT | Ensure audit_backlog_limit is sufficient | Grep GRUB_CMDLINE_LINUX parameter"
        shell: grep 'GRUB_CMDLINE_LINUX=' /etc/default/grub | cut -f2 -d'"'
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel7cis_4_1_2_4_grub_cmdline_linux_settings

      - name: "4.1.2.4 | PATCH | Ensure audit_backlog_limit is sufficient | Set audit_backlog_limit if not configured"
        lineinfile:
            dest: /etc/default/grub
            regexp: '^GRUB_CMDLINE_LINUX='
            line: 'GRUB_CMDLINE_LINUX="{{ rhel7cis_4_1_2_4_grub_cmdline_linux_settings.stdout }} audit_backlog_limit={{ rhel7cis_audit_backlog_limit }}"'
        register: grub_backup_new
        notify: grub2cfg
        when: '"audit_backlog_limit" not in rhel7cis_4_1_2_4_grub_cmdline_linux_settings.stdout'

      - name: "4.1.2.4 | PATCH | Ensure audit_backlog_limit is sufficient | Adjust audit_backlog_limit if exists"
        replace:
            dest: /etc/default/grub
            regexp: 'audit_backlog_limit=([^\D]+)'
            replace: 'audit_backlog_limit={{ rhel7cis_audit_backlog_limit }}'
        register: grub_backup_updated
        notify: grub2cfg
        when: '"audit_backlog_limit" in rhel7cis_4_1_2_4_grub_cmdline_linux_settings.stdout'

      - name: "4.1.2.4 | PATCH | Ensure audit_backlog_limit is sufficient"
        set_fact:
            change_requires_reboot: true
        when:
            - grub_backup_updated.changed or
              grub_backup_new.changed

  when:
      - rhel7cis_rule_4_1_2_4
  tags:
      - level2-server
      - level2-workstation
      - grub
      - patch
      - rule_4.1.2.4

- name: "4.1.3 | PATCH | Ensure events that modify date and time information are collected"
  template:
      src: audit/time_change.rules.j2
      dest: /etc/audit/rules.d/time_change.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_3
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.3

- name: "4.1.4 | PATCH | Ensure events that modify user/group information are collected"
  template:
      src: audit/identity.rules.j2
      dest: /etc/audit/rules.d/identity.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_4
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.4

- name: "4.1.5 | PATCH | Ensure events that modify the system's network environment are collected"
  template:
      src: audit/system_local.rules.j2
      dest: /etc/audit/rules.d/system_local.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_5
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.5

- name: "4.1.6 | PATCH | Ensure events that modify the system's Mandatory Access Controls are collected"
  template:
      src: audit/MAC_policy.rules.j2
      dest: /etc/audit/rules.d/MAC_policy.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_6
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.6

- name: "4.1.7 | PATCH | Ensure login and logout events are collected"
  block:
      - name: "4.1.7 | AUDIT | Ensure login and logout events are collected | Check for pam_fallock or pam_tally2"
        shell: grep pam_tally2.so /etc/pam.d/system-auth /etc/pam.d/password-auth
        changed_when: false
        failed_when: false
        register: rhel7cis_4_1_7_tally2_check
        tags:
            - skip_ansible_lint

      - name: "4.1.7 | PATCH | Ensure login and logout events are collected | Set login and logout events"
        template:
            src: audit/logins.rules.j2
            dest: /etc/audit/rules.d/logins.rules
            owner: root
            group: root
            mode: 0600
        notify: restart auditd
  when:
      - rhel7cis_rule_4_1_7
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.7

- name: "4.1.8 | PATCH | Ensure session initiation information is collected"
  template:
      src: audit/session.rules.j2
      dest: /etc/audit/rules.d/session.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_8
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.8

- name: "4.1.9 | PATCH | Ensure discretionary access control permission modification events are collected"
  template:
      src: audit/perm_mod.rules.j2
      dest: /etc/audit/rules.d/perm_mod.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_9
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.9

- name: "4.1.10 | PATCH | Ensure unsuccessful unauthorized file access attempts are collected"
  template:
      src: audit/access.rules.j2
      dest: /etc/audit/rules.d/access.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_10
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.10

- name: "4.1.11 | PATCH | Ensure use of privileged commands is collected"
  block:
      - name: "4.1.11 | AUDIT | Ensure use of privileged commands is collected"
        shell: for i in  $(df | grep '^/dev' | awk '{ print $NF }'); do find $i -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null; done
        register: priv_procs
        changed_when: false
        check_mode: false

      - name: "4.1.11 | PATCH | Ensure use of privileged commands is collected"
        template:
            src: audit/priv_commands.rules.j2
            dest: /etc/audit/rules.d/priv_commands.rules
            owner: root
            group: root
            mode: 0600
        notify: restart auditd
  when:
      - rhel7cis_rule_4_1_11
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.11

- name: "4.1.12 | PATCH | Ensure successful file system mounts are collected"
  template:
      src: audit/mounts.rules.j2
      dest: /etc/audit/rules.d/mounts.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_12
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.12

- name: "4.1.13 | PATCH | Ensure file deletion events by users are collected"
  template:
      src: audit/deletion.rules.j2
      dest: /etc/audit/rules.d/deletion.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_13
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.13

- name: "4.1.14 | PATCH | Ensure changes to system administration scope (sudoers) is collected"
  template:
      src: audit/scope.rules.j2
      dest: /etc/audit/rules.d/scope.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_14
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.14

- name: "4.1.15 | PATCH | Ensure system administrator command executions (sudo) are collected"
  template:
      src: audit/actions.rules.j2
      dest: /etc/audit/rules.d/actions.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_15
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.15

- name: "4.1.16 | PATCH | Ensure kernel module loading and unloading is collected"
  template:
      src: audit/modules.rules.j2
      dest: /etc/audit/rules.d/modules.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_16
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.16

- name: "4.1.17 | PATCH | Ensure the audit configuration is immutable"
  template:
      src: audit/99_finalize.rules.j2
      dest: /etc/audit/rules.d/99_finalize.rules
      owner: root
      group: root
      mode: 0600
  notify: restart auditd
  when:
      - rhel7cis_rule_4_1_17
  tags:
      - level2-server
      - level2-workstation
      - auditd
      - patch
      - rule_4.1.17

---

- name: "4.2.1.1 | PATCH | Ensure rsyslog is installed"
  package:
      name: "{{ rhel7cis_syslog }}"
      state: present
  vars:
      ansible_python_interpreter: /bin/python
  when:
      - rhel7cis_rule_4_2_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.1.1

- name: "4.2.1.2 | PATCH | Ensure rsyslog Service is enabled and running"
  service:
      name: rsyslog
      enabled: true
      state: started
  when:
      - rhel7cis_rule_4_2_1_2
      - rhel7cis_syslog == 'rsyslog'
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rsyslog
      - rule_4.2.1.2

- name: "4.2.1.3 | PATCH | Ensure rsyslog default file permissions configured"
  lineinfile:
      dest: /etc/rsyslog.conf
      regexp: '^\$FileCreateMode'
      line: '$FileCreateMode 0640'
  notify: restart rsyslog
  when:
      - rhel7cis_rule_4_2_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.1.3

- name: "4.2.1.4 | PATCH | Ensure logging is configured"
  block:
      - name: "4.2.1.4 | AUDIT | Ensure logging is configured | rsyslog current config message out"
        shell: cat /etc/rsyslog.conf
        changed_when: false
        failed_when: false
        register: rhel_07_4_2_1_4_audit

      - name: "4.2.1.4 | PATCH | Ensure logging is configured | Debug out rsyslog settings"
        debug:
            msg:
                - "These are the current logging configurations for rsyslog, please review:"
                - "{{ rhel_07_4_2_1_4_audit.stdout_lines }}"
        when:
            - not rhel7cis_rsyslog_ansiblemanaged

      - name: "4.2.1.4 | PATCH | Ensure logging is configured | Set logging settings lineinfile"
        lineinfile:
            path: /etc/rsyslog.conf
            state: present
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: '^[# ]*{{ item.insertafter }}\s*=\s*'
        with_items:
            - { regexp: '^\*\.emerg(.*)$', line: '*.emerg                                                 :omusrmsg:*', insertafter: '# Everybody gets emergency messages' }
            - { regexp: '^authpriv(.*)$', line: 'auth,authpriv.*                                              /var/log/secure', insertafter: '# # The authpriv file has restricted access.' }
            - { regexp: '^mail\.\*(.*)$', line: 'mail.*                                                  -/var/log/mail', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^mail.info(.*)$', line: 'mail.info                                               -/var/log/mail.info', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^mail.warning(.*)$', line: 'mail.warning                                            -/var/log/mail.warning', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^mail.err(.*)$', line: 'mail.err                                                /var/log/mail.err', insertafter: '# Log all the mail messages in one place.' }
            - { regexp: '^news.crit(.*)$', line: 'news.crit                                               -/var/log/news/news.crit', insertafter: '# Save news errors of level crit and higher in a special file.' }
            - { regexp: '^news.err(.*)$', line: 'news.err                                             -/var/log/news/news.err', insertafter: '# Save news errors of level crit and higher in a special file.' }
            - { regexp: '^news.notice(.*)$', line: 'news.notice                                             -/var/log/news/news.notice', insertafter: '# Save news errors of level crit and higher in a special file.' }
        loop_control:
            label: "{{ item.regexp }}"
        notify: restart rsyslog
        when:
            - rhel7cis_rsyslog_ansiblemanaged

      - name: "4.2.1.4 | PATCH | Ensure logging is configured | Misc. log setting"
        blockinfile:
            path: /etc/rsyslog.conf
            state: present
            marker: "# {mark} MISC. LOG SETTINGS (ANSIBLE MANAGED)"
            block: |
              # misc. logging additions to meet CIS standards
              *.=warning;*.=err                                        -/var/log/warn
              *.crit                                                   /var/log/warn
              *.*;mail.none;news.none                                  /var/log/messages
            insertafter: '#### RULES ####'
        notify: restart rsyslog
        when:
            - rhel7cis_rsyslog_ansiblemanaged

      - name: "4.2.1.4 | PATCH | Ensure logging is configured | Local log settings"
        blockinfile:
            path: /etc/rsyslog.conf
            state: present
            marker: "#{mark} LOCAL LOG SETTINGS (ANSIBLE MANAGED)"
            block: |
              # local log settings
              local0,local1.*                                          -/var/log/localmessages
              local2,local3.*                                          -/var/log/localmessages
              local4,local5.*                                          -/var/log/localmessages
              local6,local7.*                                          -/var/log/localmessages
            insertafter: '#### RULES ####'
        notify: restart rsyslog
  when:
      - rhel7cis_rule_4_2_1_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rsyslog
      - rule_4.2.1.4

- name: "4.2.1.5 | PATCH | Ensure rsyslog is configured to send logs to a remote log host"
  blockinfile:
      path: /etc/rsyslog.conf
      state: present
      block: |
        # remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
        *.* @@{{ rhel7cis_remote_log_server }}
      insertafter: EOF
  notify: restart rsyslog
  register: result
  failed_when:
      - result is failed
      - result.rc != 257
  when:
      - rhel7cis_rule_4_2_1_5
      - rhel7cis_remote_log_server is defined
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.1.5
      - rsyslog

- name: "4.2.1.6 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts."
  block:
      - name: "4.2.1.6 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts. | When not log host"
        replace:
            path: /etc/rsyslog.conf
            regexp: '({{ item }})'
            replace: '#\1'
        with_items:
            - '^(\$ModLoad imtcp)'
            - '^(\$InputTCPServerRun)'
        notify: restart rsyslog
        when:
            - not rhel7cis_system_is_log_server

      - name: "4.2.1.6 | PATCH | Ensure remote rsyslog messages are only accepted on designated log hosts. | When log host"
        replace:
            path: /etc/rsyslog.conf
            regexp: '^#(.*{{ item }}.*)'
            replace: '\1'
        with_items:
            - 'ModLoad imtcp'
            - 'InputTCPServerRun'
        notify: restart rsyslog
        when:
            - rhel7cis_system_is_log_server
  when:
      - rhel7cis_rule_4_2_1_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.1.6
      - rsyslog

---

- name: "4.2.2.1 | PATCH | Ensure journald is configured to send logs to rsyslog"
  lineinfile:
      path: /etc/systemd/journald.conf
      regexp: '^[F|f]orward[T|t]o[S|s]yslog='
      line: "ForwardToSyslog=yes"
  when:
      - rhel7cis_rule_4_2_2_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.2.1
      - journald

- name: "4.2.2.2 | PATCH | Ensure journald is configured to compress large log files"
  lineinfile:
      path: /etc/systemd/journald.conf
      regexp: '^[C|c]ompress='
      line: "Compress=yes"
  when:
      - rhel7cis_rule_4_2_2_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.2.2
      - journald

- name: "4.2.2.3 | PATCH | Ensure journald is configured to write logfiles to persistent disk"
  lineinfile:
      path: /etc/systemd/journald.conf
      regexp: '^[S|s]torage='
      line: "Storage=persistent"
  when:
      - rhel7cis_rule_4_2_2_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.2.3
      - journald

---

- name: "4.2.3 | PATCH | Ensure permissions on all logfiles are configured"
  command: find /var/log -type f -exec chmod g-wx,o-rwx "{}" +
  changed_when: false
  failed_when: false
  when:
      - rhel7cis_rule_4_2_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_4.2.3

- name: "4.2.4 | AUDIT | Ensure logrotate is configured"
  block:
      - name: "4.2.4 | AUDIT | Ensure logrotate is configured"
        find:
            paths: /etc/logrotate.d/
        register: log_rotate

      - name: "4.2.4 | AUDIT | Ensure logrotate is configured | output list"
        debug:
            msg:
                - WARNING!! The following files need to confirm with site requirements
                - /etc/logrotate.conf
                - "{{ log_rotate.files | map(attribute='path') | list }}"
        when: log_rotate.matched > 0
  when:
      - rhel7cis_rule_4_2_4
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_4.2.4


---

- name: "5.1.1 | PATCH | Ensure cron daemon is enabled and running"
  service:
      name: crond
      enabled: true
      state: started
  when:
      - rhel7cis_rule_5_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.1

- name: "5.1.2 | PATCH | Ensure permissions on /etc/crontab are configured"
  file:
      dest: /etc/crontab
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_5_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.2

- name: "5.1.3 | PATCH | Ensure permissions on /etc/cron.hourly are configured"
  file:
      dest: /etc/cron.hourly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.3

- name: "5.1.4 | PATCH | Ensure permissions on /etc/cron.daily are configured"
  file:
      dest: /etc/cron.daily
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.4

- name: "5.1.5 | PATCH | Ensure permissions on /etc/cron.weekly are configured"
  file:
      dest: /etc/cron.weekly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.5

- name: "5.1.6 | PATCH | Ensure permissions on /etc/cron.monthly are configured"
  file:
      dest: /etc/cron.monthly
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.6

- name: "5.1.7 | PATCH | Ensure permissions on /etc/cron.d are configured"
  file:
      dest: /etc/cron.d
      state: directory
      owner: root
      group: root
      mode: 0700
  when:
      - rhel7cis_rule_5_1_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.7

- name: "5.1.8 | PATCH | Ensure cron is restricted to authorized users"
  block:
      - name: "5.1.8 | PATCH | Ensure cron is restricted to authorized users | Remove cron.deny"
        file:
            dest: /etc/cron.deny
            state: absent

      - name: "5.1.8 | PATCH | Ensure cron is restricted to authorized users | Check if cron.allow exists"
        stat:
            path: "/etc/cron.allow"
        register: p

      - name: "5.1.8 | PATCH | Ensure cron is restricted to authorized users | Ensure cron.allow is restricted to authorized users"
        file:
            dest: /etc/cron.allow
            state: '{{ "file" if  p.stat.exists else "touch" }}'
            owner: root
            group: root
            mode: 0600
  when:
      - rhel7cis_rule_5_1_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.8

- name: "5.1.9 | PATCH | Ensure at is restricted to authorized users"
  block:
      - name: "5.1.9 | PATCH | Ensure at is restricted to authorized users | Remove at.deny"
        file:
            dest: /etc/at.deny
            state: absent

      - name: "5.1.9 | AUDIT | Ensure at is restricted to authorized users | Check if at.allow exists"
        stat:
            path: "/etc/at.allow"
        register: p

      - name: "5.1.9 | PATCH | Ensure at is restricted to authorized users | Ensure at.allow is restricted to authorized users"
        file:
            dest: /etc/at.allow
            state: '{{ "file" if  p.stat.exists else "touch" }}'
            owner: root
            group: root
            mode: 0600
  when:
      - rhel7cis_rule_5_1_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.1.9

---

- name: "5.2.1 | PATCH | Ensure sudo is installed"
  package:
      name: sudo
      state: present
  become: true
  when:
      - rhel7cis_rule_5_2_1
  tags:
      - level1-server
      - level1-workstation
      - sudo
      - patch
      - rule_5.2.1
  vars:
      ansible_python_interpreter: /bin/python

- name: "5.2.2 | AUDIT | Ensure sudo commands use pty"
  lineinfile:
      dest: /etc/sudoers
      regexp: '^Defaults    use_pty'
      line: 'Defaults    use_pty'
      state: present
      validate: '/usr/sbin/visudo -cf %s'
  become: true
  when:
      - rhel7cis_rule_5_2_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - sudo
      - rule_5.2.2

- name: "5.2.3 | PATCH | Ensure sudo log file exists"
  lineinfile:
      dest: /etc/sudoers
      regexp: '^Defaults    logfile="{{ rhel7cis_varlog_location }}"'
      line: 'Defaults    logfile="{{ rhel7cis_varlog_location }}"'
      state: present
      validate: '/usr/sbin/visudo -cf %s'
  become: true
  when:
      - rhel7cis_rule_5_2_1 and rhel7cis_rule_5_2_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - sudo
      - rule_5.2.3

---

- name: "5.3.1 | PATCH | Ensure permissions on /etc/ssh/sshd_config are configured"
  file:
      dest: /etc/ssh/sshd_config
      state: file
      owner: root
      group: root
      mode: 0600
  when:
      - rhel7cis_rule_5_3_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.1

- name: "5.3.2 | PATCH | Ensure permissions on SSH private host key files are configured"
  block:
      - name: "5.3.2 | AUDIT | Ensure permissions on SSH private host key files are configured"
        find:
            paths:
                - /etc/ssh
            patterns: 'ssh_host_*_key'
            recurse: true
            file_type: any
        register: rhel_07_5_3_2_priv_results

      - name: "5.3.2 | AUDIT | Ensure permissions on SSH private host key files are configured"
        file:
            path: "{{ item.path }}"
            owner: root
            group: root
            mode: 0600
        loop: "{{ rhel_07_5_3_2_priv_results.files }}"
        loop_control:
            label: "{{ item.path }}"
  when:
      - rhel7cis_rule_5_3_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.2

- name: "5.3.3 | PATCH | Ensure permissions on SSH public host key files are configured"
  block:
      - name: "5.3.3 | AUDIT | Ensure permissions on SSH public host key files are configured"
        find:
            paths:
                - /etc/ssh
            patterns: 'ssh_host_*_key'
            recurse: true
            file_type: any
        register: rhel_07_5_3_3_pub_results

      - name: "5.3.3 | AUDIT | Ensure permissions on SSH public host key files are configured"
        file:
            path: "{{ item.path }}"
            owner: root
            group: root
            mode: 0600
        loop: "{{ rhel_07_5_3_3_pub_results.files }}"
        loop_control:
            label: "{{ item.path }}"
  when:
      - rhel7cis_rule_5_3_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.3

- name: "5.3.4 | PATCH | Ensure SSH access is limited"
  block:
      - name: "5.3.4 | PATCH | Ensure SSH access is limited | Add line to sshd_config for allowusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^AllowUsers"
            insertbefore: "# Accept locale-related environment variables"
            line: AllowUsers {{ rhel7cis_sshd['allowusers'] }}
            validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
        notify:
            - restart sshd
        when:
            - "rhel7cis_sshd['allowusers']|default('') | length > 0"

      - name: "5.3.4 | PATCH | Ensure SSH access is limited | Add line to sshd_config for allowgroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^AllowGroups"
            insertbefore: "# Accept locale-related environment variables"
            line: AllowGroups {{ rhel7cis_sshd['allowgroups'] }}
            validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
        notify:
            - restart sshd
        when:
            - "rhel7cis_sshd['allowgroups']|default('') | length > 0"

      - name: "5.3.4 | PATCH | Ensure SSH access is limited | Add line to sshd_config for denyusers"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^DenyUsers"
            insertbefore: "# Accept locale-related environment variables"
            line: DenyUsers {{ rhel7cis_sshd['denyusers'] }}
            validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
        notify:
            - restart sshd
        when:
            - "rhel7cis_sshd['denyusers']|default('') | length > 0"

      - name: "5.3.4 | PATCH | Ensure SSH access is limited | Add line to sshd_config for denygroups"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^DenyGroups"
            insertbefore: "# Accept locale-related environment variables"
            line: DenyGroups {{ rhel7cis_sshd['denygroups'] }}
            validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
        notify:
            - restart sshd
        when:
            - "rhel7cis_sshd['denygroups']|default('') | length > 0"
  when:
      - rhel7cis_rule_5_3_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.4

- name: "5.3.5 | PATCH | Ensure SSH LogLevel is appropriate"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#LogLevel|^LogLevel"
      line: 'LogLevel {{ rhel7cis_ssh_loglevel }}'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.5

- name: "5.3.6 | PATCH | Ensure SSH X11 forwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#X11Forwarding|^X11Forwarding"
      line: 'X11Forwarding no'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_6
  tags:
      - level2-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.6

- name: "5.3.7 | PATCH | Ensure SSH MaxAuthTries is set to 4 or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^(#)?MaxAuthTries \d'
      line: 'MaxAuthTries 4'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.7

- name: "5.3.8 | PATCH | Ensure SSH IgnoreRhosts is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#IgnoreRhosts|^IgnoreRhosts"
      line: 'IgnoreRhosts yes'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.8

- name: "5.3.9 | PATCH | Ensure SSH HostbasedAuthentication is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#HostbasedAuthentication|^HostbasedAuthentication"
      line: 'HostbasedAuthentication no'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.9

- name: "5.3.10 | PATCH | Ensure SSH root login is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#PermitRootLogin|^PermitRootLogin"
      line: 'PermitRootLogin no'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_10
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.10

- name: "5.3.11 | PATCH | Ensure SSH PermitEmptyPasswords is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#PermitEmptyPasswords|^PermitEmptyPasswords"
      line: 'PermitEmptyPasswords no'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_11
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.11

- name: "5.3.12 | PATCH | Ensure SSH PermitUserEnvironment is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#PermitUserEnvironment|^PermitUserEnvironment"
      line: 'PermitUserEnvironment no'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_12
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.12

- name: "5.3.13 | PATCH | Ensure only strong Ciphers are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^Ciphers'
      insertbefore: "# Accept locale-related environment variables"
      line: "Ciphers {{ rhel7cis_sshd['ciphers'] }}"
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_13
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.13

- name: "5.3.14 | PATCH | Ensure only strong MAC algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^MACs'
      insertbefore: "# Accept locale-related environment variables"
      line: "MACs {{ rhel7cis_sshd['macs'] }}"
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_14
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.14

- name: "5.3.15 | PATCH | Ensure only strong Key Exchange algorithms are used"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: '^KexAlgorithms'
      line: "KexAlgorithms {{ rhel7cis_sshd['kex'] }}"
      insertafter: '^MACs'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_15
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.15

- name: "5.3.16 | PATCH | Ensure SSH Idle Timeout Interval is configured"
  block:
      - name: "5.3.16 | PATCH | Ensure SSH Idle Timeout Interval is configured | Add line in sshd_config for ClientAliveInterval"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^#ClientAliveInterval|^ClientAliveInterval"
            line: "ClientAliveInterval {{ rhel7cis_sshd['clientaliveinterval'] }}"
            validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
        notify:
            - restart sshd

      - name: "5.3.16 | PATCH | Ensure SSH Idle Timeout Interval is configured | Ensure SSH ClientAliveCountMax set to <= 3"
        lineinfile:
            state: present
            dest: /etc/ssh/sshd_config
            regexp: "^#ClientAliveCountMax|^ClientAliveCountMax"
            line: "ClientAliveCountMax {{ rhel7cis_sshd['clientalivecountmax'] }}"
            validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
        notify:
            - restart sshd
  when:
      - rhel7cis_rule_5_3_16
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.16

- name: "5.3.17 | PATCH | Ensure SSH LoginGraceTime is set to one minute or less"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#LoginGraceTime|^LoginGraceTime"
      line: "LoginGraceTime {{ rhel7cis_sshd['logingracetime'] }}"
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_17
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.17

- name: "5.3.18 | PATCH | Ensure SSH warning banner is configured"
  lineinfile:
      dest: /etc/ssh/sshd_config
      regexp: '^Banner ((?!/etc/issue.net$)).*$'
      line: "{{ item.line | default (omit) }}"
      insertafter: "{{ item.after | default(omit) }}"
      state: "{{ item.state }}"
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  with_items:
      - { state: absent }
      - { state: present, line: 'Banner /etc/issue.net', after: '#Banner none' }
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_18
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.18

- name: "5.3.19 | PATCH | Ensure SSH PAM is enabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#UsePAM|^UsePAM"
      line: 'UsePAM yes'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_19
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.19

- name: "5.3.20 | PATCH | Ensure SSH AllowTcpForwarding is disabled"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#AllowTcpForwarding|^AllowTcpForwarding"
      line: 'AllowTcpForwarding no'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_20
  tags:
      - level2-server
      - level2-workstation
      - patch
      - ssh
      - rule_5.3.20

- name: "5.3.21 | PATCH | Ensure SSH MaxStartups is configured"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#MaxStartups|^MaxStartups"
      line: 'MaxStartups 10:30:60'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_21
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.21

- name: "5.3.22 | PATCH | Ensure SSH MaxSessions is limited"
  lineinfile:
      state: present
      dest: /etc/ssh/sshd_config
      regexp: "^#MaxSessions|^MaxSessions"
      line: 'MaxSessions {{ rhel7cis_ssh_maxsessions }}'
      validate: /usr/sbin/sshd -T -C user=root -C host="$(hostname)" -C addr="$(grep $(hostname) /etc/hosts | awk '{print $1}')" -f %s
  notify:
      - restart sshd
  when:
      - rhel7cis_rule_5_3_22
  tags:
      - level1-server
      - level1-workstation
      - patch
      - ssh
      - rule_5.3.22

---

- name: "5.4.1 | PATCH | Ensure password creation requirements are configured"
  lineinfile:
      state: present
      dest: "/etc/security/pwquality.conf"
      regexp: '^{{ item.key }}'
      line: '{{ item.key }} = {{ item.value }}'
  with_items:
      - { key: 'minlen', value: '14' }
      - { key: 'minclass', value: '4' }
  when:
      - rhel7cis_rule_5_4_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.1

- name: |
        "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured
         5.4.3 | PATCH | Ensure password hashing algorithm is SHA-512
         5.4.4 | PATCH | Ensure password reuse is limited"
  block:
      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Add deny count and unlock time for preauth"
        lineinfile:
            dest: "/etc/pam.d/{{ item }}"
            state: present
            line: "auth        required      pam_faillock.so preauth audit silent deny={{ rhel7cis_pam_faillock.attempts }}{{ (rhel7cis_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}unlock_time={{ rhel7cis_pam_faillock.unlock_time }}"
            insertafter: '^#?auth ?'
        loop:
            - "system-auth"
            - "password-auth"

      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Add success and default settings to pam_unix.so"
        lineinfile:
            dest: "/etc/pam.d/{{ item }}"
            state: present
            line: "auth        [success=1 default=bad] pam_unix.so"
            insertafter: '^#?auth ?'
        loop:
            - "system-auth"
            - "password-auth"

      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Add default, deny count, and unlock times for authfail"
        lineinfile:
            dest: "/etc/pam.d/{{ item }}"
            state: present
            line: "auth        [default=die] pam_faillock.so authfail audit deny={{ rhel7cis_pam_faillock.attempts }}{{ (rhel7cis_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}unlock_time={{ rhel7cis_pam_faillock.unlock_time }}"
            insertafter: '^#?auth ?'
        loop:
            - "system-auth"
            - "password-auth"

      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Add deny count and unlock times to authsucc"
        lineinfile:
            dest: "/etc/pam.d/{{ item }}"
            state: present
            line: "auth        sufficient    pam_faillock.so authsucc audit deny={{ rhel7cis_pam_faillock.attempts }}{{ (rhel7cis_pam_faillock.fail_for_root) | ternary(' even_deny_root ',' ') }}unlock_time={{ rhel7cis_pam_faillock.unlock_time }}"
            insertafter: '^#?auth ?'
        loop:
            - "system-auth"
            - "password-auth"

      - name: "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Activate deny count and unlock times to failed password"
        lineinfile:
            dest: "/etc/pam.d/{{ item }}"
            state: present
            line: "account     required      pam_faillock.so"
            firstmatch: true
            regexp: '^\s*account\s+required\s+pam_faillock.so\s*'
            insertbefore: '^#?account ?'
        loop:
            - "system-auth"
            - "password-auth"

      - name: "5.4.3 | PATCH | Ensure password hashing algorithm is SHA-512 | add sha512 settings"
        lineinfile:
            dest: "/etc/pam.d/{{ item }}"
            state: present
            line: "password    sufficient    pam_unix.so {{ rhel7cis_pam_faillock.pwhash }} shadow nullok try_first_pass use_authtok"
            insertafter: '^#?password ?'
        loop:
            - "system-auth"
            - "password-auth"

      - name: "5.4.4 | PATCH | Ensure password reuse is limited | add remember settings"
        lineinfile:
            dest: "/etc/pam.d/{{ item }}"
            state: present
            line: "password    required    pam_pwhistory.so remember={{ rhel7cis_pam_faillock.remember }}"
            insertafter: '^#?password ?'
        loop:
            - "system-auth"
            - "password-auth"

      # The two steps below were added to keep authconfig from overwritting the above configs. This follows steps from here: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-hardening_your_system_with_tools_and_services
      # With the steps below you will score five (5) points lower due to false positive results

      - name: |
              "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Copy system/passowrd-auth to system/password-auth-local
               5.4.3 | PATCH | Ensure password hashing algorithm is SHA-512
               5.4.4 | PATCH | Ensure password reuse is limited | Copy system/password-auth to system/password-auth-local"
        copy:
            src: "/etc/pam.d/{{ item }}"
            dest: "/etc/pam.d/{{ item }}-local"
            remote_src: true
            owner: root
            group: root
            mode: '0644'
        loop:
            - "system-auth"
            - "password-auth"

      - name: |
              "5.4.2 | PATCH | Ensure lockout for failed password attempts is configured | Setup symbolic link
               5.4.4 | PATCH | Ensure password reuse is limited | Setup symbolic link"
        file:
            src: "/etc/pam.d/{{ item }}-local"
            dest: "/etc/pam.d/{{ item }}"
            state: link
            force: true
        loop:
            - "system-auth"
            - "password-auth"
  when:
      - rhel7cis_rule_5_4_2
      - rhel7cis_rule_5_4_3
      - rhel7cis_rule_5_4_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.4.2
      - rule_5.4.4

---

- name: "5.5.1.1 | PATCH | Ensure password expiration is 365 days or less"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MAX_DAYS'
      line: "PASS_MAX_DAYS {{ rhel7cis_pass['max_days'] }}"
  when:
      - rhel7cis_rule_5_5_1_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.1.1

- name: "5.5.1.2 | PATCH | Ensure minimum days between password changes is configured"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_MIN_DAYS'
      line: "PASS_MIN_DAYS {{ rhel7cis_pass['min_days'] }}"
  when:
      - rhel7cis_rule_5_5_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.1.2

- name: "5.5.1.3 | PATCH | Ensure password expiration warning days is 7 or more"
  lineinfile:
      state: present
      dest: /etc/login.defs
      regexp: '^PASS_WARN_AGE'
      line: "PASS_WARN_AGE {{ rhel7cis_pass['warn_age'] }}"
  when:
      - rhel7cis_rule_5_5_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.1.3

- name: "5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less"
  block:
      - name: "5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Set default inactive setting"
        lineinfile:
            path: /etc/default/useradd
            regexp: '^INACTIVE='
            line: "INACTIVE={{ rhel7cis_inactivelock['lock_days'] }}"
            state: present

      - name: "5.5.1.4 | AUDIT | Ensure inactive password lock is 30 days or less | Getting user list"
        shell: "egrep ^[A-Za-z0-9][^:]+:[^\\!*] /etc/shadow | awk -F: '{print $1 \",\" $7}' | egrep -v  ',\\d|,[1-2][0-9]|,30|{{ rhel7cis_inactive_whitelist | join('|') }}' | cut -d , -f1"
        changed_when: false
        check_mode: false
        register: rhel_07_5_5_1_4_audit

      - name: "5.5.1.4 | PATCH | Ensure inactive password lock is 30 days or less | Apply Inactive setting to existing accounts"
        shell: "chage --inactive {{ rhel7cis_inactivelock.lock_days }} {{ item }}"
        with_items:
            - "{{ rhel_07_5_5_1_4_audit.stdout_lines }}"
        when:
            - rhel_07_5_5_1_4_audit.stdout | length > 0
  when:
      - rhel7cis_rule_5_5_1_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.1.4

- name: "5.5.1.5 | PATCH | Ensure all users last password change date is in the past"
  block:
      - name: "5.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Get current date in Unix Time"
        shell: echo $(($(date --utc --date "$1" +%s)/86400))
        failed_when: false
        changed_when: false
        check_mode: false
        register: rhel7cis_5_5_1_5_current_unix_time

      - name: "5.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Get list of users with last changed pw date in the future"
        shell: "cat /etc/shadow | awk -F: '{if($3>{{ rhel7cis_5_5_1_5_current_unix_time.stdout }})print$1}'"
        check_mode: false
        changed_when: false
        register: rhel7cis_5_5_1_5_user_list

      - name: "5.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Alert no pw change in the future exist"
        debug:
            msg: "Good News! All accounts have PW change dates that are in the past"
        when: rhel7cis_5_5_1_5_user_list.stdout | length == 0

      - name: "5.5.1.5 | AUDIT | Ensure all users last password change date is in the past | Alert on accounts with pw change in the future"
        debug:
            msg: "WARNING!! The following accounts have the last PW change date in the future: {{ rhel7cis_5_5_1_5_user_list.stdout_lines }}"
        when:
            - rhel7cis_5_5_1_5_user_list.stdout | length > 0
            - not rhel7cis_futurepwchgdate_autofix

      - name: "5.5.1.5 | PATCH | Ensure all users last password change date is in the past | Fix accounts with pw change in the future"
        shell: passwd --expire {{ item }}
        when:
            - rhel7cis_5_5_1_5_user_list | length > 0
            - rhel7cis_futurepwchgdate_autofix
        with_items:
            - "{{ rhel7cis_5_5_1_5_user_list.stdout_lines }}"
  when:
      - rhel7cis_rule_5_5_1_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.1.5

---

- name: "5.5.2 | PATCH | Ensure system accounts are secured"
  block:
      - name: "5.5.2 | PATCH | Ensure system accounts are secured | Set nologin"
        user:
            name: "{{ item.id }}"
            shell: /usr/sbin/nologin
        loop: "{{ rhel7cis_passwd }}"
        loop_control:
            label: "{{ item.id }}"
        when:
            - item.id != "root"
            - item.id != "sync"
            - item.id != "shutdown"
            - item.id != "halt"
            - item.gid < rhel7cis_int_gid
            - item.shell != "      /bin/false"
            - item.shell != "      /usr/sbin/nologin"

      - name: "5.5.2 | PATCH | Ensure system accounts are secured | Lock accounts"
        user:
            name: "{{ item.id }}"
            password_lock: true
        loop: "{{ rhel7cis_passwd }}"
        loop_control:
            label: "{{ item.id }}"
        when:
            - item.id != "halt"
            - item.id != "shutdown"
            - item.id != "sync"
            - item.id != "root"
            - item.gid < rhel7cis_int_gid
            - item.shell != "      /bin/false"
            - item.shell != "      /usr/sbin/nologin"
  when:
      - rhel7cis_rule_5_5_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.2

- name: "5.5.3 | PATCH | Ensure default group for the root account is GID 0"
  shell: usermod -g 0 root
  changed_when: false
  failed_when: false
  when:
      - rhel7cis_rule_5_5_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.3

- name: "5.5.4 | PATCH | Ensure default user shell timeout is configured"
  blockinfile:
      create: true
      mode: 0644
      dest: "{{ item.dest }}"
      state: "{{ item.state }}"
      marker: "# {mark} ANSIBLE MANAGED"
      block: |
          # Set session timeout - CIS ID RHEL-07-5.5.4
          TMOUT={{ rhel7cis_shell_session_timeout.timeout }}
          readonly TMOUT
          export TMOUT
  loop:
      - dest: "{{ rhel7cis_shell_session_timeout.file }}"
        state: present
      - dest: /etc/profile
        state: "{{ (rhel7cis_shell_session_timeout.file == '/etc/profile') | ternary('present', 'absent') }}"
  when:
      - rhel7cis_rule_5_5_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.4

- name: "5.5.5 | PATCH | Ensure default user umask is configured"
  block:
      - name: "5.5.5 | PATCH | Ensure default user umask is configured | Set umask for /etc/bashrc"
        replace:
            path: /etc/bashrc
            regexp: '(^\s+umask) 0[012][0-6]'
            replace: '\1 027'

      - name: "5.5.5 | PATCH | Ensure default user umask is configured | Set umask for /etc/profile"
        replace:
            path: /etc/profile
            regexp: '(^\s+umask) 0[012][0-6]'
            replace: '\1 027'
  when:
      - rhel7cis_rule_5_5_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.5.5

---

- name: "5.6 | AUDIT | Ensure root login is restricted to system console "
  block:
      - name: "5.6 | AUDIT | Ensure root login is restricted to system console"
        command: cat /etc/securetty
        changed_when: false
        check_mode: false
        register: rhel_07_5_6_audit

      - name: "5.6 | AUDIT | Ensure root login is restricted to system console"
        debug:
            msg:
                - "These are the consoles with root login access, please review:"
                - "{{ rhel_07_5_6_audit.stdout_lines }}"
  when:
      - rhel7cis_rule_5_6
  tags:
      - level1-server
      - level1-workstation
      - audit
      - rule_5.6

---

- name: "5.7 | PATCH | Ensure access to the su command is restricted"
  block:
      - name: "5.7 | PATCH | Ensure access to the su command is restricted | Setting pam_wheel to use_uid"
        lineinfile:
            state: present
            dest: /etc/pam.d/su
            regexp: '^(#)?auth\s+required\s+pam_wheel\.so'
            line: 'auth            required        pam_wheel.so use_uid {% if rhel7cis_sugroup is defined %}group={{ rhel7cis_sugroup }}{% endif %}'

      - name: "5.7 | PATCH | Ensure access to the su command is restricted | wheel group contains root"
        group:
            name: root
            groups: "{{ rhel7cis_sugroup }}"
        when:
            - rhel7cis_sugroup is defined
  when:
      - rhel7cis_rule_5_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_5.7


---
- name: "6.1.1 | PATCH | Audit system file permissions"
  block:
      - name: "6.1.1 | AUDIT | Audit system file permissions | Audit the packages"
        shell: rpm -Va --nomtime --nosize --nomd5 --nolinkto
        changed_when: false
        failed_when: false
        check_mode: false
        register: rhel7cis_6_1_1_packages_rpm
        tags:
            - skip_ansible_lint

      - name: "6.1.1 | AUDIT | Audit system file permissions | Create list and warning"
        block:
            - name: "6.1.1 | AUDIT | Audit system file permissions | Add file discrepancy list to system"
              copy:
                  dest: "{{ rhel7cis_rpm_audit_file }}"  # noqa template-instead-of-copy
                  content: "{{ rhel7cis_6_1_1_packages_rpm.stdout }}"
                  owner: root
                  group: root
                  mode: 0640

            - name: "6.1.1 | AUDIT | Audit system file permissions | Message out alert for package descrepancies"
              debug:
                  msg: |
                      "WARNING!! You have some package descrepancies issues.
                       The file list can be found in {{ rhel7cis_rpm_audit_file }}"
              when: rhel7cis_6_1_1_packages_rpm.stdout|length > 0

            - name: "6.1.1 | AUDIT | Audit system file permissions | Message out no package descrepancies"
              debug:
                  msg: "Good News! There are no package descrepancies"
              when: rhel7cis_6_1_1_packages_rpm.stdout|length == 0
  when:
      - rhel7cis_rule_6_1_1
  tags:
      - level2-server
      - level2-workstation
      - patch
      - rule_6.1.1

- name: "6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      dest: /etc/passwd
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.2

- name: "6.1.3 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      dest: /etc/passwd-
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.3

- name: "6.1.4 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      dest: /etc/shadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.4

- name: "6.1.5 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      dest: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.5

- name: "6.1.6 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      dest: /etc/gshadow-
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.6

- name: "6.1.7 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      dest: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  when:
      - rhel7cis_rule_6_1_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.7

- name: "6.1.8 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      dest: /etc/group
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.8

- name: "6.1.9 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      dest: /etc/group-
      owner: root
      group: root
      mode: 0644
  when:
      - rhel7cis_rule_6_1_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.9

- name: "6.1.10 | PATCH | Ensure no world writable files exist"
  block:
      - name: "6.1.10 | AUDIT | Ensure no world writable files exist | Get list of world-writable files"
        shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -0002
        failed_when: false
        changed_when: false
        register: rhel_07_6_1_10_perms_results

      - name: "6.1.10 | AUDIT | Ensure no world writable files exist | Alert no world-writable files exist"
        debug:
            msg: "Good news! We have not found any world-writable files on your system"
        failed_when: false
        changed_when: false
        when:
            - rhel_07_6_1_10_perms_results.stdout is not defined

      - name: "6.1.10 | PATCH | Ensure no world writable files exist | Adjust world-writable files if they exist (Configurable)"
        file:
            path: '{{ item }}'
            mode: o-w
            state: touch
        with_items: "{{ rhel_07_6_1_10_perms_results.stdout_lines }}"
        when:
            - rhel_07_6_1_10_perms_results.stdout_lines is defined
            - rhel7cis_no_world_write_adjust
  when:
      - rhel7cis_rule_6_1_10
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.10

- name: "6.1.11 | PATCH | Ensure no unowned files or directories exist"
  block:
      - name: "6.1.11 | AUDIT | Ensure no unowned files or directories exist | Finding all unowned files or directories"
        command: find "{{ item.mount }}" -xdev -nouser
        check_mode: false
        register: rhel_07_6_1_11_audit
        failed_when: false
        changed_when: false
        when: item['device'].startswith('/dev') and not 'bind' in item['options']
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.11 | AUDIT | Ensure no unowned files or directories exist | Displaying any unowned files or directories"
        debug:
            msg: "WARNING!! Manual intervention is required -- missing owner on items in {{ item.item.mount }}: {{ item.stdout_lines | join(', ') }}"
        when:
            - item.stdout_lines is defined
            - item.stdout_lines | length > 0
        with_items: "{{ rhel_07_6_1_11_audit.results }}"
  when:
      - rhel7cis_rule_6_1_11
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.11

- name: "6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  block:
      - name: "6.1.12 | AUDIT | Ensure no ungrouped files or directories exist | Finding all ungrouped files or directories"
        command: find "{{ item.mount }}" -xdev -nogroup
        check_mode: false
        register: rhel_07_6_1_12_audit
        failed_when: false
        changed_when: false
        when: item['device'].startswith('/dev') and not 'bind' in item['options']
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.12 | AUDIT | Ensure no ungrouped files or directories exist | Displaying all ungrouped files or directories"
        debug:
            msg: "WARNING!! Manual intervention is required -- missing group on items in {{ item }}!"
        changed_when: item | length > 0
        with_items: "{{ rhel_07_6_1_12_audit.results | map(attribute='stdout_lines') }}"
  when:
      - rhel7cis_rule_6_1_12
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.12

- name: "6.1.13 | PATCH | Audit SUID executables"
  block:
      - name: "6.1.13 | AUDIT | Audit SUID executables | Find all SUID executables"
        shell: df {{ item.mount }} -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -4000
        failed_when: false
        changed_when: false
        register: rhel_07_6_1_13_perms_results
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.13 | AUDIT | Audit SUID executables |  Alert no SUID executables exist"
        debug:
            msg: "Good news! We have not found any SUID executable files on your system"
        failed_when: false
        changed_when: false
        when:
            - rhel_07_6_1_13_perms_results.stdout is not defined

      - name: "6.1.13 | AUDIT | Audit SUID executables |  Alert SUID executables exist"
        debug:
            msg: "WARNING!! Manual intervention is required -- SUID set on items in {{ item.item.mount }}: {{ item.stout_lines | join(', ') }}"
        with_items: "{{ rhel_07_6_1_13_perms_results.stdout_lines }}"
        when:
            - rhel_07_6_1_13_perms_results.stdout is defined
  when:
      - rhel7cis_rule_6_1_13
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.13

- name: "6.1.14 | PATCH | Audit SGID executables"
  block:
      - name: "6.1.14 | AUDIT | Audit SGID executables | Find all SGID executables"
        shell: df {{ item.mount }} -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type f -perm -2000
        failed_when: false
        changed_when: false
        register: rhel_07_6_1_14_perms_results
        with_items: "{{ ansible_mounts }}"
        loop_control:
            label: "{{ item.mount }}"

      - name: "6.1.14 | AUDIT | Audit SGID executables |  Alert no SGID executables exist"
        debug:
            msg: "Good news! We have not found any SGID executable files on your system"
        failed_when: false
        changed_when: false
        when:
            - rhel_07_6_1_14_perms_results.stdout is not defined

      - name: "6.1.14 | AUDIT | Audit SGID executables |  Alert SGID executables exist"
        debug:
            msg: "WARNING!! Manual intervention is required -- SGID set on items in {{ item.item.mount }}: {{ item.stout_lines | join(', ') }}"
        with_items: "{{ rhel_07_6_1_14_perms_results.stdout_lines }}"
        when:
            - rhel_07_6_1_14_perms_results.stdout is defined
  when:
      - rhel7cis_rule_6_1_14
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.1.14

---

- name: "6.2.1 | PATCH | Ensure accounts in /etc/passwd use shadow passwords"
  block:
      - name: "6.2.1 | PATCH | Ensure accounts in /etc/passwd use shadow passwords"
        shell: sed -e 's/^\([a-zA-Z0-9_]*\):[^:]*:/\1:x:/' -i /etc/passwd
        loop: "{{ rhel7cis_passwd | selectattr('password', '!=', 'x') | list }}"
        args:
            warn: false
        register: rhel7_6_2_1_shadow
        when:
            - rhel7cis_passwd | selectattr('password', '!=', 'x')

      - name: "6.2.1 | PATCH | Ensure accounts in /etc/passwd use shadow passwords | Good News"
        debug:
            msg: "Good News!!  No Unshadowed passwords have been found"
        when: rhel7_6_2_1_shadow is not changed
  when:
      - rhel7cis_rule_6_2_1
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.1

- name: "6.2.2 | PATCH |  Ensure /etc/shadow password fields are not empty"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  loop: "{{ empty_password_accounts.stdout_lines }}"
  when:
      - empty_password_accounts.rc
      - rhel7cis_rule_6_2_2
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.2

- name: "6.2.3 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  block:
      - name: "6.2.3 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Check /etc/passwd entries"
        shell: pwck -r | grep 'no group' | awk '{ gsub("[:\47]",""); print $2}'
        changed_when: false
        failed_when: false
        check_mode: false
        register: passwd_gid_check

      - name: "6.2.3 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Print message that all groups match between passwd and group files"
        debug:
            msg: "Good News! There are no users that have non-existent GUIDs (Groups)"
        when: passwd_gid_check.stdout is not defined

      - name: "6.2.3 | AUDIT | Ensure all groups in /etc/passwd exist in /etc/group | Print warning about users with invalid GIDs missing GID entries in /etc/group"
        debug:
            msg: "WARNING!! The following users have non-existent GIDs (Groups): {{ passwd_gid_check.stdout_lines | join (', ') }}"
        changed_when: false
        when: passwd_gid_check.stdout is defined
  when:
      - rhel7cis_rule_6_2_3
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.3

- name: "6.2.4 | AUDIT | Ensure shadow group is empty"
  block:
      - name: "6.2.4 | AUDIT | Ensure shadow group is empty"
        shell: "grep ^shadow:[^:]*:[^:]*:[^:]+ /etc/group"
        changed_when: false
        failed_when: false
        register: users_in_shadow_group

      - name: "6.2.4 | AUDIT | Ensure shadow group is empty | Print no user in shadow group"
        debug:
            msg: "Good News! There are no users in the shadow group"
        when: users_is_shadow_group.stdout is undefined

      - name: "6.2.4  AUDIT | Ensure shadow group is empty | Print no user in shadow group"
        debug:
            msg: "WARNING!! The following users are in the shadow group: {{ users_is_shadow_group.stdout_lines }}"
        when: users_is_shadow_group.stdout is defined
  when:
      - rhel7cis_rule_6_2_4
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.4

- name: "6.2.5 | PATCH | Ensure no duplicate user names exist"
  block:
      - name: "6.2.5 | AUDIT | Ensure no duplicate user names exist | Check for duplicate User Names"
        shell: "pwck -r | awk -F: '{if ($1 in users) print $1 ; else users[$1]}' /etc/passwd"
        changed_when: false
        failed_when: false
        register: user_username_check

      - name: "6.2.5 | AUDIT | Ensure no duplicate user names exist | Print message that no duplicate user names exist"
        debug:
            msg: "Good News! There are no duplicate user names in the system"
        when: user_username_check.stdout is not defined

      - name: "6.2.5 | AUDIT | Ensure no duplicate user names exist | Print warning about users with duplicate User Names"
        debug:
            msg: "WARNING!! The following user names are duplicates: {{ user_username_check.stdout_lines }}"
        when: user_username_check.stdout is defined
  when:
      - rhel7cis_rule_6_2_5
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.5

- name: "6.2.6 | PATCH | Ensure no duplicate group names exist"
  block:
      - name: "6.2.6 | AUDIT | Ensure no duplicate group names exist | Check for duplicate group names"
        shell: 'getent passwd | cut -d: -f1 | sort -n | uniq -d'
        changed_when: false
        failed_when: false
        check_mode: false
        register: group_group_check

      - name: "6.2.6 | AUDIT | Ensure no duplicate group names exist | Print message that no duplicate groups exist"
        debug:
            msg: "Good News! There are no duplicate group names in the system"
        when: group_group_check.stdout is defined

      - name: "6.2.6 | AUDIT | Ensure no duplicate group names exist | Print warning about users with duplicate group names"
        debug:
            msg: "WARNING!! The following group names are duplicates: {{ group_group_check.stdout_lines }}"
        when: group_group_check.stdout is not defined
  when:
      - rhel7cis_rule_6_2_6
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.6

- name: "6.2.7 | PATCH | Ensure no duplicate UIDs exist"
  block:
      - name: "6.2.7 | AUDIT | Ensure no duplicate UIDs exist | Check for duplicate UIDs"
        shell: "pwck -r | awk -F: '{if ($3 in uid) print $1 ; else uid[$3]}' /etc/passwd"
        changed_when: false
        failed_when: false
        register: user_uid_check

      - name: "6.2.7 | AUDIT | Ensure no duplicate UIDs exist | Print message that no duplicate UIDs exist"
        debug:
            msg: "Good News! There are no duplicate UID's in the system"
        when: user_uid_check.stdout is not defined

      - name: "6.2.7 | AUDIT | Ensure no duplicate UIDs exist | Print warning about users with duplicate UIDs"
        debug:
            msg: "WARNING!! The following users have UIDs that are duplicates: {{ user_uid_check.stdout_lines }}"
        when: user_uid_check.stdout is defined
  when:
      - rhel7cis_rule_6_2_7
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.7


- name: "6.2.8 | PATCH | Ensure no duplicate GIDs exist"
  block:
      - name: "6.2.8 | AUDIT | Ensure no duplicate GIDs exist | Check for duplicate GIDs"
        shell: "pwck -r | awk -F: '{if ($3 in users) print $1 ; else users[$3]}' /etc/group"
        changed_when: false
        failed_when: false
        register: user_user_check

      - name: "6.2.8 | AUDIT | Ensure no duplicate GIDs exist | Print message that no duplicate GID's exist"
        debug:
            msg: "Good News! There are no duplicate GIDs in the system"
        when: user_user_check.stdout is not defined

      - name: "6.2.8 | AUDIT | Ensure no duplicate GIDs exist | Print warning about users with duplicate GIDs"
        debug:
            msg: "WARNING!! The following groups have duplicate GIDs: {{ user_user_check.stdout_lines }}"
        when: user_user_check.stdout is defined
  when:
      - rhel7cis_rule_6_2_8
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.8

- name: "6.2.9 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  changed_when: false
  failed_when: false
  loop: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when:
      - uid_zero_accounts_except_root.rc
      - rhel7cis_rule_6_2_9
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.9

- name: "6.2.10 | PATCH | Ensure root PATH Integrity"
  block:
      - name: "6.2.10 | AUDIT | Ensure root PATH Integrity | Determine empty value"
        shell: 'echo $PATH | grep ::'
        changed_when: false
        failed_when: path_colon.rc == 0
        check_mode: false
        register: path_colon

      - name: "6.2.10 | AUDIT | Ensure root PATH Integrity | Determin colon end"
        shell: 'echo $PATH | grep :$'
        changed_when: false
        failed_when: path_colon_end.rc == 0
        check_mode: false
        register: path_colon_end

      - name: "6.2.10 | AUDIT | Ensure root PATH Integrity | Determine dot in path"
        shell: "/bin/bash --login -c 'env | grep ^PATH=' | grep ^PATH | sed -e 's/PATH=//' -e 's/::/:/' -e 's/:$//' -e 's/:/\\n/g'"
        changed_when: false
        failed_when: '"." in dot_in_path.stdout_lines'
        check_mode: false
        register: dot_in_path

      - name: "6.2.10 | AUDIT | Ensure root PATH Integrity | Alert on empty value, colon end, and dot in path"
        debug:
            msg:
                - "The following paths have an empty value: {{ path_colon.stdout_lines }}"
                - "The following paths have colon end: {{ path_colon_end.stdout_lines }}"
                - "The following paths have a dot in the path: {{ dot_in_path.stdout_lines }}"

      - name: "6.2.10 | PATCH | Ensure root PATH Integrity | Determine rights and owner"
        file: >
            path='{{ item }}'
            follow=yes
            state=directory
            owner=root
            mode='o-w,g-w'
        loop: "{{ dot_in_path.stdout_lines }}"
  when:
      - rhel7cis_rule_6_2_10
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.10

- name: "6.2.11 | PATCH | Ensure all users' home directories exist"
  block:
      - name: "6.2.11 | AUDIT | Ensure all users' home directories exist | Find users missing home directories"
        shell: set -o pipefail ; pwck -r | grep -P {{ ld_regex | quote }}
        changed_when: rhel_07_6_2_11_audit | length > 0
        # failed_when: 0: success, 1: no grep match, 2: pwck found something
        failed_when: rhel7cis_users_missing_home.rc not in [0,1,2]
        check_mode: false
        register: rhel7cis_users_missing_home

      - name: "6.2.11 | AUDIT | Ensure all users' home directories exist | set fact missinghome dirs"
        set_fact:
            missing_home_dirs: "{{ rhel_07_6_2_11_audit | map(attribute='id') | list }}"

      - name: "6.2.11 | PATCH | Ensure all users' home directories exist | create missing home dirs"
        shell: "mkhomedir_helper {{ item }}"
        with_items:
            - "{{ missing_home_dirs }}"
        when: rhel7cis_users_missing_home is changed

      - name: "6.2.11 | Audit| Ensure all users' home directories exist | Warning"
        debug:
            msg: "WARNING!! {{ item }} user home directory has been created please ensure any SELINUX settings are applied"
        with_items:
            - "{{ missing_home_dirs }}"
        when: rhel7cis_users_missing_home is changed

  vars:
      ld_regex: >-
         ^user '(?P<user>.*)': directory '(?P<dir>.*)' does not exist$
      ld_users: "{{ rhel7cis_users_missing_home.stdout_lines | map('regex_replace', ld_regex, '\\g<user>') | list }}"
      rhel_07_6_2_11_audit: "{{ rhel7cis_passwd | selectattr('uid', '>=', 1000) | selectattr('id', 'in', ld_users) | list }}"
  when:
      - rhel7cis_rule_6_2_11
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.11

- name: "6.2.12 | PATCH | Ensure users own their home directories"
  file:
      path: "{{ item.dir }}"
      owner: "{{ item.id }}"
      state: directory
  with_items: "{{ rhel7cis_passwd | selectattr('uid', '>=', 1000) | selectattr('uid', '!=', 65534) | selectattr('dir', '!=', '/') | list }}"
  loop_control:
      label: "{{ rhel7cis_passwd_label }}"
  when:
      - rhel7cis_rule_6_2_12
  tags:
      - skip_ansible_lint
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.12

- name: "6.2.13 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  block:
      - name: "6.2.13 | AUDIT | Ensure users' home directories permissions are 750 or more restrictive"
        stat:
            path: "{{ item }}"
        with_items: "{{ rhel7cis_passwd | selectattr('uid', '>=', 1000) | selectattr('uid', '!=', 65534) | selectattr('dir', '!=', '/') | map(attribute='dir') | list }}"
        register: rhel_07_6_2_13_audit

      - name: "6.2.13 | AUDIT | Ensure users' home directories permissions are 750 or more restrictive"
        command: find -P {{ item.0 | quote }} -not -type l -perm /027
        check_mode: false
        register: rhel_07_6_2_13_patch_audit
        changed_when: rhel_07_6_2_13_patch_audit.stdout != ""
        when:
            - ansible_check_mode
            - item.1.exists
        with_together:
            - "{{ rhel_07_6_2_13_audit.results | map(attribute='item') | list }}"
            - "{{ rhel_07_6_2_13_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      - name: "6.2.13 | AUDIT | Ensure users' home directories permissions are 750 or more restrictive"
        file:
            path: "{{ item.0 }}"
            recurse: true
            mode: a-st,g-w,o-rwx
            follow: false
        register: rhel_07_6_2_13_patch
        when:
            - not ansible_check_mode
            - item.1.exists
        with_together:
            - "{{ rhel_07_6_2_13_audit.results | map(attribute='item') | list }}"
            - "{{ rhel_07_6_2_13_audit.results | map(attribute='stat') | list }}"
        loop_control:
            label: "{{ item.0 }}"

      # set default ACLs so the homedir has an effective umask of 0027
      - name: "6.2.13 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
        acl:
            path: "{{ item.0 }}"
            default: true
            state: present
            recursive: true
            follow: false
            etype: "{{ item.1.etype }}"
            permissions: "{{ item.1.mode }}"
        when:
            - not system_is_container
        with_nested:
            - "{{ (ansible_check_mode | ternary(rhel_07_6_2_13_patch_audit, rhel_07_6_2_13_patch)).results |
              rejectattr('skipped', 'defined') | map(attribute='item') | map('first') | list }}"
            -
                - etype: group
                  mode: rx
                - etype: other
                  mode: '0'
  when:
      - rhel7cis_rule_6_2_13
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.13

- name: "6.2.14 | PATCH | Ensure users' dot files are not group or world-writable"
  block:
      - name: "6.2.14 | AUDIT | Ensure users' dot files are not group or world-writable | Check for files"
        shell: find /home/ -name "\.*" -perm /g+w,o+w
        changed_when: false
        failed_when: false
        register: rhel7cis_6_2_14_audit

      - name: "6.2.14 | AUDIT | Ensure users' dot files are not group or world-writable | Alert on files found"
        debug:
            msg: "Good news! We have not found any group or world-writable dot files on your sytem"
        failed_when: false
        changed_when: false
        when:
            - rhel7cis_6_2_14_audit.stdout is not defined

      - name: "6.2.14 | PATCH | Ensure users' dot files are not group or world-writable | Changes files if configured"
        file:
            path: '{{ item }}'
            mode: go-w
        with_items: "{{ rhel7cis_6_2_14_audit.stdout_lines }}"
        when:
            - rhel7cis_6_2_14_audit.stdout is defined
            - rhel7cis_dotperm_ansiblemanaged
  when:
      - rhel7cis_rule_6_2_14
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.14

- name: "6.2.15 | PATCH | Ensure no users have .forward files"
  file:
      state: absent
      dest: "~{{ item }}/.forward"
  loop: "{{ users.stdout_lines }}"
  when:
      - rhel7cis_rule_6_2_15
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.15

- name: "6.2.16 | PATCH | Ensure no users have .netrc files"
  file:
      state: absent
      dest: "~{{ item }}/.netrc"
  with_items: "{{ users.stdout_lines }}"
  when:
      - rhel7cis_rule_6_2_16
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.16

- name: "6.2.17 | PATCH | Ensure no users have .rhosts files"
  file:
      state: absent
      dest: "~{{ item }}/.rhosts"
  with_items: "{{ users.stdout_lines }}"
  when:
      - rhel7cis_rule_6_2_17
  tags:
      - level1-server
      - level1-workstation
      - patch
      - rule_6.2.17


